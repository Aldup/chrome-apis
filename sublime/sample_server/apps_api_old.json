{"chrome.contextMenus": {"functions": [{"parent_name": null, "name": "removeAll", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when removal is complete."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when removal is complete."}, "returns": null, "id": "method-removeAll", "description": "Removes all context menu items added by this extension."}, {"parent_name": null, "name": "create", "parameters": [{"parent_name": "create", "functions": [], "name": "createProperties", "simple_type": "object", "properties": [{"parent_name": "createProperties", "functions": [], "name": "documentUrlPatterns", "properties": [], "array": {"parent_name": "documentUrlPatterns", "functions": [], "name": "documentUrlPatternsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-documentUrlPatterns-documentUrlPatternsElement", "description": null}, "optional": true, "id": "property-createProperties-documentUrlPatterns", "description": "Lets you restrict the item to apply only to documents whose URL matches one of the given patterns. (This applies to frames as well.) For details on the format of a pattern, see <a href='match_patterns.html'>Match Patterns</a>."}, {"parent_name": "createProperties", "functions": [], "name": "checked", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-createProperties-checked", "description": "The initial state of a checkbox or radio item: true for selected and false for unselected. Only one radio item can be selected at a time in a given group of radio items."}, {"parent_name": "createProperties", "functions": [], "name": "title", "simple_type": "string", "properties": [], "optional": true, "id": "property-createProperties-title", "description": "The text to be displayed in the item; this is <em>required</em> unless <em>type</em> is 'separator'. When the context is 'selection', you can use <code>%s</code> within the string to show the selected text. For example, if this parameter's value is \"Translate '%s' to Pig Latin\" and the user selects the word \"cool\", the context menu item for the selection is \"Translate 'cool' to Pig Latin\"."}, {"parent_name": "createProperties", "functions": [], "name": "contexts", "properties": [], "array": {"parent_name": "contexts", "functions": [], "name": "contextsElement", "properties": [], "enum_values": [{"name": "all"}, {"name": "page"}, {"name": "frame"}, {"name": "selection"}, {"name": "link"}, {"name": "editable"}, {"name": "image"}, {"name": "video"}, {"name": "audio"}, {"last": true, "name": "launcher"}], "optional": false, "id": "property-contexts-contextsElement", "description": null}, "optional": true, "id": "property-createProperties-contexts", "description": "List of contexts this menu item will appear in. Defaults to ['page'] if not specified. Specifying ['all'] is equivalent to the combination of all other contexts except for 'launcher'. The 'launcher' context is only supported by apps and is used to add menu items to the context menu that appears when clicking on the app icon in the launcher/taskbar/dock/etc. Different platforms might put limitations on what is actually supported in a launcher context menu."}, {"parent_name": "createProperties", "functions": [], "name": "enabled", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-createProperties-enabled", "description": "Whether this context menu item is enabled or disabled. Defaults to true."}, {"parent_name": "createProperties", "functions": [], "name": "targetUrlPatterns", "properties": [], "array": {"parent_name": "targetUrlPatterns", "functions": [], "name": "targetUrlPatternsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-targetUrlPatterns-targetUrlPatternsElement", "description": null}, "optional": true, "id": "property-createProperties-targetUrlPatterns", "description": "Similar to documentUrlPatterns, but lets you filter based on the src attribute of img/audio/video tags and the href of anchor tags."}, {"parent_name": "createProperties", "functions": [], "name": "onclick", "simple_type": "function", "properties": [], "optional": true, "id": "property-createProperties-onclick", "description": "A function that will be called back when the menu item is clicked. Event pages cannot use this; instead, they should register a listener for chrome.contextMenus.onClicked."}, {"parent_name": "createProperties", "functions": [], "name": "parentId", "properties": [], "choices": [{"parent_name": "parentId", "functions": [], "name": "parentId", "simple_type": "integer", "properties": [], "optional": true, "id": "property-parentId-parentId", "description": null}, {"parent_name": "parentId", "functions": [], "last": true, "name": "parentId", "simple_type": "string", "properties": [], "optional": true, "id": "property-parentId-parentId", "description": null}], "optional": true, "id": "property-createProperties-parentId", "description": "The ID of a parent menu item; this makes the item a child of a previously added item."}, {"parent_name": "createProperties", "functions": [], "name": "type", "properties": [], "enum_values": [{"name": "normal"}, {"name": "checkbox"}, {"name": "radio"}, {"last": true, "name": "separator"}], "optional": true, "id": "property-createProperties-type", "description": "The type of menu item. Defaults to 'normal' if not specified."}, {"parent_name": "createProperties", "functions": [], "name": "id", "simple_type": "string", "properties": [], "optional": true, "id": "property-createProperties-id", "description": "The unique ID to assign to this item. Mandatory for event pages. Cannot be the same as another ID for this extension."}], "optional": false, "id": "property-create-createProperties", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when the item has been created in the browser. If there were any problems creating the item, details will be available in chrome.extension.lastError."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when the item has been created in the browser. If there were any problems creating the item, details will be available in chrome.extension.lastError."}, "returns": {"parent_name": "create", "functions": [], "name": "return", "properties": [], "choices": [{"parent_name": "return", "functions": [], "name": "return", "simple_type": "integer", "properties": [], "optional": true, "id": "property-return-return", "description": null}, {"parent_name": "return", "functions": [], "last": true, "name": "return", "simple_type": "string", "properties": [], "optional": true, "id": "property-return-return", "description": null}], "optional": false, "id": "property-create-return", "description": "The ID of the newly created item."}, "id": "method-create", "description": "Creates a new context menu item. Note that if an error occurs during creation, you may not find out until the creation callback fires (the details will be in chrome.extension.lastError)."}, {"parent_name": null, "name": "update", "parameters": [{"parent_name": "update", "functions": [], "name": "id", "properties": [], "choices": [{"parent_name": "id", "functions": [], "name": "id", "simple_type": "integer", "properties": [], "optional": true, "id": "property-id-id", "description": null}, {"parent_name": "id", "functions": [], "last": true, "name": "id", "simple_type": "string", "properties": [], "optional": true, "id": "property-id-id", "description": null}], "optional": false, "id": "property-update-id", "description": "The ID of the item to update."}, {"parent_name": "update", "functions": [], "name": "updateProperties", "simple_type": "object", "properties": [{"parent_name": "updateProperties", "functions": [], "name": "documentUrlPatterns", "properties": [], "array": {"parent_name": "documentUrlPatterns", "functions": [], "name": "documentUrlPatternsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-documentUrlPatterns-documentUrlPatternsElement", "description": null}, "optional": true, "id": "property-updateProperties-documentUrlPatterns", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "checked", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-updateProperties-checked", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "title", "simple_type": "string", "properties": [], "optional": true, "id": "property-updateProperties-title", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "contexts", "properties": [], "array": {"parent_name": "contexts", "functions": [], "name": "contextsElement", "properties": [], "enum_values": [{"name": "all"}, {"name": "page"}, {"name": "frame"}, {"name": "selection"}, {"name": "link"}, {"name": "editable"}, {"name": "image"}, {"name": "video"}, {"name": "audio"}, {"last": true, "name": "launcher"}], "optional": false, "id": "property-contexts-contextsElement", "description": null}, "optional": true, "id": "property-updateProperties-contexts", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "enabled", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-updateProperties-enabled", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "targetUrlPatterns", "properties": [], "array": {"parent_name": "targetUrlPatterns", "functions": [], "name": "targetUrlPatternsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-targetUrlPatterns-targetUrlPatternsElement", "description": null}, "optional": true, "id": "property-updateProperties-targetUrlPatterns", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "onclick", "simple_type": "function", "properties": [], "optional": true, "id": "property-updateProperties-onclick", "description": null}, {"parent_name": "updateProperties", "functions": [], "name": "parentId", "properties": [], "choices": [{"parent_name": "parentId", "functions": [], "name": "parentId", "simple_type": "integer", "properties": [], "optional": true, "id": "property-parentId-parentId", "description": null}, {"parent_name": "parentId", "functions": [], "last": true, "name": "parentId", "simple_type": "string", "properties": [], "optional": true, "id": "property-parentId-parentId", "description": null}], "optional": true, "id": "property-updateProperties-parentId", "description": "Note: You cannot change an item to be a child of one of its own descendants."}, {"parent_name": "updateProperties", "functions": [], "name": "type", "properties": [], "enum_values": [{"name": "normal"}, {"name": "checkbox"}, {"name": "radio"}, {"last": true, "name": "separator"}], "optional": true, "id": "property-updateProperties-type", "description": null}], "optional": false, "id": "property-update-updateProperties", "description": "The properties to update. Accepts the same values as the create function."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when the context menu has been updated."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when the context menu has been updated."}, "returns": null, "id": "method-update", "description": "Updates a previously created context menu item."}, {"parent_name": null, "name": "remove", "parameters": [{"parent_name": "remove", "functions": [], "name": "menuItemId", "properties": [], "choices": [{"parent_name": "menuItemId", "functions": [], "name": "menuItemId", "simple_type": "integer", "properties": [], "optional": true, "id": "property-menuItemId-menuItemId", "description": null}, {"parent_name": "menuItemId", "functions": [], "last": true, "name": "menuItemId", "simple_type": "string", "properties": [], "optional": true, "id": "property-menuItemId-menuItemId", "description": null}], "optional": false, "id": "property-remove-menuItemId", "description": "The ID of the context menu item to remove."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when the context menu has been removed."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when the context menu has been removed."}, "returns": null, "id": "method-remove", "description": "Removes a context menu item."}], "events": [{"callback": null, "name": "onClicked", "parameters": [{"parent_name": "onClicked", "functions": [], "name": "info", "properties": [], "link": {"text": "OnClickData", "href": "#type-OnClickData"}, "optional": false, "id": "property-onClicked-info", "description": "Information about the item clicked and the context where the click happened."}, {"parent_name": "onClicked", "functions": [], "last": true, "name": "tab", "properties": [], "link": {"text": "tabs.Tab", "href": "tabs.html#type-Tab"}, "optional": true, "id": "property-onClicked-tab", "description": "The details of the tab where the click took place. If the click did not take place in a tab, this parameter will be missing."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onClicked", "actions": [], "description": "Fired when a context menu item is clicked."}], "types": [{"properties": [{"parent_name": "OnClickData", "functions": [], "name": "selectionText", "simple_type": "string", "properties": [], "optional": true, "id": "property-OnClickData-selectionText", "description": "The text for the context selection, if any."}, {"parent_name": "OnClickData", "functions": [], "name": "checked", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-OnClickData-checked", "description": "A flag indicating the state of a checkbox or radio item after it is clicked."}, {"parent_name": "OnClickData", "functions": [], "name": "menuItemId", "properties": [], "choices": [{"parent_name": "menuItemId", "functions": [], "name": "menuItemId", "simple_type": "integer", "properties": [], "optional": true, "id": "property-menuItemId-menuItemId", "description": null}, {"parent_name": "menuItemId", "functions": [], "last": true, "name": "menuItemId", "simple_type": "string", "properties": [], "optional": true, "id": "property-menuItemId-menuItemId", "description": null}], "optional": false, "id": "property-OnClickData-menuItemId", "description": "The ID of the menu item that was clicked."}, {"parent_name": "OnClickData", "functions": [], "name": "frameUrl", "simple_type": "string", "properties": [], "optional": true, "id": "property-OnClickData-frameUrl", "description": " The URL of the frame of the element where the context menu was clicked, if it was in a frame."}, {"parent_name": "OnClickData", "functions": [], "name": "srcUrl", "simple_type": "string", "properties": [], "optional": true, "id": "property-OnClickData-srcUrl", "description": "Will be present for elements with a 'src' URL."}, {"parent_name": "OnClickData", "functions": [], "name": "editable", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-OnClickData-editable", "description": "A flag indicating whether the element is editable (text input, textarea, etc.)."}, {"parent_name": "OnClickData", "functions": [], "name": "mediaType", "simple_type": "string", "properties": [], "optional": true, "id": "property-OnClickData-mediaType", "description": "One of 'image', 'video', or 'audio' if the context menu was activated on one of these types of elements."}, {"parent_name": "OnClickData", "functions": [], "name": "wasChecked", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-OnClickData-wasChecked", "description": "A flag indicating the state of a checkbox or radio item before it was clicked."}, {"parent_name": "OnClickData", "functions": [], "name": "pageUrl", "simple_type": "string", "properties": [], "optional": true, "id": "property-OnClickData-pageUrl", "description": "The URL of the page where the menu item was clicked. This property is not set if the click occured in a context where there is no current page, such as in a launcher context menu."}, {"parent_name": "OnClickData", "functions": [], "name": "linkUrl", "simple_type": "string", "properties": [], "optional": true, "id": "property-OnClickData-linkUrl", "description": "If the element is a link, the URL it points to."}, {"parent_name": "OnClickData", "functions": [], "name": "parentMenuItemId", "properties": [], "choices": [{"parent_name": "parentMenuItemId", "functions": [], "name": "parentMenuItemId", "simple_type": "integer", "properties": [], "optional": true, "id": "property-parentMenuItemId-parentMenuItemId", "description": null}, {"parent_name": "parentMenuItemId", "functions": [], "last": true, "name": "parentMenuItemId", "simple_type": "string", "properties": [], "optional": true, "id": "property-parentMenuItemId-parentMenuItemId", "description": null}], "optional": true, "id": "property-OnClickData-parentMenuItemId", "description": "The parent ID, if any, for the item clicked."}], "name": "OnClickData", "simple_type": "object", "functions": [], "events": [], "id": "type-OnClickData", "description": "Information sent when a context menu item is clicked."}], "properties": []}, "chrome.experimental.systemInfo.cpu": {"functions": [{"parent_name": null, "name": "get", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "CpuInfoCallback", "parameters": [{"parent_name": "CpuInfoCallback", "functions": [], "last": true, "name": "info", "properties": [], "link": {"text": "CpuInfo", "href": "#type-CpuInfo"}, "optional": false, "id": "property-CpuInfoCallback-info", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "CpuInfoCallback", "parameters": [{"parent_name": "CpuInfoCallback", "functions": [], "last": true, "name": "info", "properties": [], "link": {"text": "CpuInfo", "href": "#type-CpuInfo"}, "optional": false, "id": "property-CpuInfoCallback-info", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-get", "description": "Get CPU information."}], "events": [], "types": [{"properties": [{"parent_name": "CpuInfo", "functions": [], "name": "archName", "simple_type": "string", "properties": [], "optional": false, "id": "property-CpuInfo-archName", "description": "The architecture name of the processors."}, {"parent_name": "CpuInfo", "functions": [], "name": "modelName", "simple_type": "string", "properties": [], "optional": false, "id": "property-CpuInfo-modelName", "description": "The model name of the processors."}, {"parent_name": "CpuInfo", "functions": [], "name": "numOfProcessors", "simple_type": "integer", "properties": [], "optional": false, "id": "property-CpuInfo-numOfProcessors", "description": "The number of logical processors."}], "name": "CpuInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-CpuInfo", "description": null}, {"properties": [{"parent_name": "CpuUpdateInfo", "functions": [], "name": "averageUsage", "simple_type": "double", "properties": [], "optional": false, "id": "property-CpuUpdateInfo-averageUsage", "description": "The average usage percent of all processors, as a number  between 0 and 100."}, {"parent_name": "CpuUpdateInfo", "functions": [], "name": "usagePerProcessor", "properties": [], "array": {"parent_name": "usagePerProcessor", "functions": [], "name": "usagePerProcessorElement", "simple_type": "double", "properties": [], "optional": false, "id": "property-usagePerProcessor-usagePerProcessorElement", "description": null}, "optional": false, "id": "property-CpuUpdateInfo-usagePerProcessor", "description": "The CPU usage array for each logic processor."}], "name": "CpuUpdateInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-CpuUpdateInfo", "description": null}], "properties": []}, "chrome.experimental.systemInfo.storage": {"functions": [{"parent_name": null, "name": "get", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "StorageInfoCallback", "parameters": [{"parent_name": "StorageInfoCallback", "functions": [], "last": true, "name": "info", "properties": [], "array": {"parent_name": "info", "functions": [], "name": "infoElement", "properties": [], "link": {"text": "StorageUnitInfo", "href": "#type-StorageUnitInfo"}, "optional": false, "id": "property-info-infoElement", "description": null}, "optional": false, "id": "property-StorageInfoCallback-info", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "StorageInfoCallback", "parameters": [{"parent_name": "StorageInfoCallback", "functions": [], "last": true, "name": "info", "properties": [], "array": {"parent_name": "info", "functions": [], "name": "infoElement", "properties": [], "link": {"text": "StorageUnitInfo", "href": "#type-StorageUnitInfo"}, "optional": false, "id": "property-info-infoElement", "description": null}, "optional": false, "id": "property-StorageInfoCallback-info", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-get", "description": "Get the storage information from the system. The argument passed to the callback is an array of StorageUnitInfo objects."}], "events": [{"callback": null, "name": "onAvailableCapacityChanged", "parameters": [{"parent_name": "onAvailableCapacityChanged", "functions": [], "last": true, "name": "info", "properties": [], "link": {"text": "StorageChangeInfo", "href": "#type-StorageChangeInfo"}, "optional": false, "id": "property-onAvailableCapacityChanged-info", "description": "The changed information for the specified storage unit"}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onAvailableCapacityChanged", "actions": [], "description": "Fired when the storage information is updated."}], "types": [{"properties": [{"parent_name": "StorageUnitInfo", "functions": [], "name": "capacity", "simple_type": "double", "properties": [], "optional": false, "id": "property-StorageUnitInfo-capacity", "description": "The total amount of the storage space, in bytes."}, {"parent_name": "StorageUnitInfo", "functions": [], "name": "availableCapacity", "simple_type": "double", "properties": [], "optional": false, "id": "property-StorageUnitInfo-availableCapacity", "description": "The available amount of the storage space, in bytes."}, {"parent_name": "StorageUnitInfo", "functions": [], "name": "id", "simple_type": "string", "properties": [], "optional": false, "id": "property-StorageUnitInfo-id", "description": "The unique id of the storage unit."}, {"parent_name": "StorageUnitInfo", "functions": [], "name": "type", "properties": [], "link": {"text": "StorageUnitType", "href": "#type-StorageUnitType"}, "optional": false, "id": "property-StorageUnitInfo-type", "description": "The type of storage device. The value is one of the constants defined for this type."}], "name": "StorageUnitInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-StorageUnitInfo", "description": null}, {"properties": [{"parent_name": "StorageChangeInfo", "functions": [], "name": "availableCapacity", "simple_type": "double", "properties": [], "optional": false, "id": "property-StorageChangeInfo-availableCapacity", "description": "The new value of the available capacity."}, {"parent_name": "StorageChangeInfo", "functions": [], "name": "id", "simple_type": "string", "properties": [], "optional": false, "id": "property-StorageChangeInfo-id", "description": "The uniue id of the storage unit already changed."}], "name": "StorageChangeInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-StorageChangeInfo", "description": null}, {"properties": [], "name": "StorageUnitType", "functions": [], "events": [], "enum_values": [{"name": "unknown"}, {"name": "harddisk"}, {"last": true, "name": "removable"}], "id": "type-StorageUnitType", "description": ""}], "properties": []}, "chrome.commands": {"functions": [{"parent_name": null, "name": "getAll", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "commands", "properties": [], "array": {"parent_name": "commands", "functions": [], "name": "commandsElement", "properties": [], "link": {"text": "Command", "href": "#type-Command"}, "optional": false, "id": "property-commands-commandsElement", "description": null}, "optional": false, "id": "property-callback-commands", "description": null}], "optional": true, "description": "Called to return the registered commands."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "commands", "properties": [], "array": {"parent_name": "commands", "functions": [], "name": "commandsElement", "properties": [], "link": {"text": "Command", "href": "#type-Command"}, "optional": false, "id": "property-commands-commandsElement", "description": null}, "optional": false, "id": "property-callback-commands", "description": null}], "optional": true, "description": "Called to return the registered commands."}, "returns": null, "id": "method-getAll", "description": "Returns all the registered extension commands for this extension and their shortcut (if active)."}], "events": [{"callback": null, "name": "onCommand", "parameters": [{"parent_name": "onCommand", "functions": [], "last": true, "name": "command", "simple_type": "string", "properties": [], "optional": false, "id": "property-onCommand-command", "description": null}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onCommand", "actions": [], "description": "Fired when a registered command is activated using a keyboard shortcut."}], "types": [{"properties": [{"parent_name": "Command", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": true, "id": "property-Command-name", "description": "The name of the Extension Command"}, {"parent_name": "Command", "functions": [], "name": "shortcut", "simple_type": "string", "properties": [], "optional": true, "id": "property-Command-shortcut", "description": "The shortcut active for this command, or blank if not active."}, {"parent_name": "Command", "functions": [], "name": "description", "simple_type": "string", "properties": [], "optional": true, "id": "property-Command-description", "description": "The Extension Command description"}], "name": "Command", "simple_type": "object", "functions": [], "events": [], "id": "type-Command", "description": null}], "properties": []}, "chrome.alarms": {"functions": [{"parent_name": null, "name": "create", "parameters": [{"parent_name": "create", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": true, "id": "property-create-name", "description": "Optional name to identify this alarm. Defaults to the empty string."}, {"parent_name": "create", "functions": [], "last": true, "name": "alarmInfo", "properties": [], "link": {"text": "AlarmCreateInfo", "href": "#type-AlarmCreateInfo"}, "optional": false, "id": "property-create-alarmInfo", "description": "Describes when the alarm should fire.  The initial time must be specified by either <var>when</var> or <var>delayInMinutes</var> (but not both).  If <var>periodInMinutes</var> is set, the alarm will repeat every <var>periodInMinutes</var> minutes after the initial event.  If neither <var>when</var> or <var>delayInMinutes</var> is set for a repeating alarm, <var>periodInMinutes</var> is used as the default for <var>delayInMinutes</var>."}], "callback": null, "returns": null, "id": "method-create", "description": "Creates an alarm.  Near the time(s) specified by <var>alarmInfo</var>, the <code>onAlarm</code> event is fired. If there is another alarm with the same name (or no name if none is specified), it will be cancelled and replaced by this alarm.<br/><br/> Note that granularity is not guaranteed: times are more of a hint to the browser. For performance reasons, alarms may be delayed an arbitrary amount of time before firing."}, {"parent_name": null, "name": "getAll", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "AlarmListCallback", "parameters": [{"parent_name": "AlarmListCallback", "functions": [], "last": true, "name": "alarms", "properties": [], "array": {"parent_name": "alarms", "functions": [], "name": "alarmsElement", "properties": [], "link": {"text": "Alarm", "href": "#type-Alarm"}, "optional": false, "id": "property-alarms-alarmsElement", "description": null}, "optional": false, "id": "property-AlarmListCallback-alarms", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "AlarmListCallback", "parameters": [{"parent_name": "AlarmListCallback", "functions": [], "last": true, "name": "alarms", "properties": [], "array": {"parent_name": "alarms", "functions": [], "name": "alarmsElement", "properties": [], "link": {"text": "Alarm", "href": "#type-Alarm"}, "optional": false, "id": "property-alarms-alarmsElement", "description": null}, "optional": false, "id": "property-AlarmListCallback-alarms", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getAll", "description": "Gets an array of all the alarms."}, {"parent_name": null, "name": "clearAll", "parameters": [], "callback": null, "returns": null, "id": "method-clearAll", "description": "Clears all alarms."}, {"parent_name": null, "name": "clear", "parameters": [{"parent_name": "clear", "functions": [], "last": true, "name": "name", "simple_type": "string", "properties": [], "optional": true, "id": "property-clear-name", "description": "The name of the alarm to clear. Defaults to the empty string."}], "callback": null, "returns": null, "id": "method-clear", "description": "Clears the alarm with the given name."}, {"parent_name": null, "name": "get", "parameters": [{"parent_name": "get", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": true, "id": "property-get-name", "description": "The name of the alarm to get. Defaults to the empty string."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "AlarmCallback", "parameters": [{"parent_name": "AlarmCallback", "functions": [], "last": true, "name": "alarm", "properties": [], "link": {"text": "Alarm", "href": "#type-Alarm"}, "optional": false, "id": "property-AlarmCallback-alarm", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "AlarmCallback", "parameters": [{"parent_name": "AlarmCallback", "functions": [], "last": true, "name": "alarm", "properties": [], "link": {"text": "Alarm", "href": "#type-Alarm"}, "optional": false, "id": "property-AlarmCallback-alarm", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-get", "description": "Retrieves details about the specified alarm."}], "events": [{"callback": null, "name": "onAlarm", "parameters": [{"parent_name": "onAlarm", "functions": [], "last": true, "name": "alarm", "properties": [], "link": {"text": "Alarm", "href": "#type-Alarm"}, "optional": false, "id": "property-onAlarm-alarm", "description": "The alarm that has elapsed."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onAlarm", "actions": [], "description": "Fired when an alarm has elapsed. Useful for event pages."}], "types": [{"properties": [{"parent_name": "AlarmCreateInfo", "functions": [], "name": "delayInMinutes", "simple_type": "double", "properties": [], "optional": true, "id": "property-AlarmCreateInfo-delayInMinutes", "description": "Length of time in minutes after which the <code>onAlarm</code> event should fire.<br/><br/> <!-- TODO: need minimum=0 -->"}, {"parent_name": "AlarmCreateInfo", "functions": [], "name": "periodInMinutes", "simple_type": "double", "properties": [], "optional": true, "id": "property-AlarmCreateInfo-periodInMinutes", "description": "If set, the onAlarm event should fire every <var>periodInMinutes</var> minutes after the initial event specified by <var>when</var> or <var>delayInMinutes</var>.  If not set, the alarm will only fire once.<br/><br/> <!-- TODO: need minimum=0 -->"}, {"parent_name": "AlarmCreateInfo", "functions": [], "name": "when", "simple_type": "double", "properties": [], "optional": true, "id": "property-AlarmCreateInfo-when", "description": "Time at which the alarm should fire, in milliseconds past the epoch (e.g. <code>Date.now() + n</code>)."}], "name": "AlarmCreateInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-AlarmCreateInfo", "description": null}, {"properties": [{"parent_name": "Alarm", "functions": [], "name": "periodInMinutes", "simple_type": "double", "properties": [], "optional": true, "id": "property-Alarm-periodInMinutes", "description": "If not null, the alarm is a repeating alarm and will fire again in <var>periodInMinutes</var> minutes."}, {"parent_name": "Alarm", "functions": [], "name": "scheduledTime", "simple_type": "double", "properties": [], "optional": false, "id": "property-Alarm-scheduledTime", "description": "Time at which this alarm was scheduled to fire, in milliseconds past the epoch (e.g. <code>Date.now() + n</code>).  For performance reasons, the alarm may have been delayed an arbitrary amount beyond this."}, {"parent_name": "Alarm", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": false, "id": "property-Alarm-name", "description": "Name of this alarm."}], "name": "Alarm", "simple_type": "object", "functions": [], "events": [], "id": "type-Alarm", "description": null}], "properties": []}, "chrome.fileSystem": {"functions": [{"parent_name": null, "name": "getWritableEntry", "parameters": [{"parent_name": "getWritableEntry", "functions": [], "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-getWritableEntry-fileEntry", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "FileEntryCallback", "parameters": [{"parent_name": "FileEntryCallback", "functions": [], "last": true, "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-FileEntryCallback-fileEntry", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "FileEntryCallback", "parameters": [{"parent_name": "FileEntryCallback", "functions": [], "last": true, "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-FileEntryCallback-fileEntry", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getWritableEntry", "description": "Get a writable FileEntry from another FileEntry. This call will fail if the application does not have the 'write' permission under 'fileSystem'."}, {"parent_name": null, "name": "isWritableEntry", "parameters": [{"parent_name": "isWritableEntry", "functions": [], "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-isWritableEntry-fileEntry", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "IsWritableCallback", "parameters": [{"parent_name": "IsWritableCallback", "functions": [], "last": true, "name": "isWritable", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-IsWritableCallback-isWritable", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "IsWritableCallback", "parameters": [{"parent_name": "IsWritableCallback", "functions": [], "last": true, "name": "isWritable", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-IsWritableCallback-isWritable", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-isWritableEntry", "description": "Gets whether this FileEntry is writable or not."}, {"parent_name": null, "name": "getDisplayPath", "parameters": [{"parent_name": "getDisplayPath", "functions": [], "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-getDisplayPath-fileEntry", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetDisplayPathCallback", "parameters": [{"parent_name": "GetDisplayPathCallback", "functions": [], "last": true, "name": "displayPath", "simple_type": "string", "properties": [], "optional": false, "id": "property-GetDisplayPathCallback-displayPath", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetDisplayPathCallback", "parameters": [{"parent_name": "GetDisplayPathCallback", "functions": [], "last": true, "name": "displayPath", "simple_type": "string", "properties": [], "optional": false, "id": "property-GetDisplayPathCallback-displayPath", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getDisplayPath", "description": "Get the display path of a FileEntry object. The display path is based on the full path of the file on the local file system, but may be made more readable for display purposes."}, {"parent_name": null, "name": "chooseEntry", "parameters": [{"parent_name": "chooseEntry", "functions": [], "name": "options", "properties": [], "link": {"text": "ChooseEntryOptions", "href": "#type-ChooseEntryOptions"}, "optional": true, "id": "property-chooseEntry-options", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "FileEntryCallback", "parameters": [{"parent_name": "FileEntryCallback", "functions": [], "last": true, "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-FileEntryCallback-fileEntry", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "FileEntryCallback", "parameters": [{"parent_name": "FileEntryCallback", "functions": [], "last": true, "name": "fileEntry", "simple_type": "fileentry", "properties": [], "optional": false, "id": "property-FileEntryCallback-fileEntry", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-chooseEntry", "description": "Ask the user to choose a file."}], "events": [], "types": [{"properties": [{"parent_name": "AcceptOption", "functions": [], "name": "mimeTypes", "properties": [], "array": {"parent_name": "mimeTypes", "functions": [], "name": "mimeTypesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-mimeTypes-mimeTypesElement", "description": null}, "optional": true, "id": "property-AcceptOption-mimeTypes", "description": "Mime-types to accept, e.g. \"image/jpeg\" or \"audio/*\". One of mimeTypes or extensions must contain at least one valid element."}, {"parent_name": "AcceptOption", "functions": [], "name": "extensions", "properties": [], "array": {"parent_name": "extensions", "functions": [], "name": "extensionsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-extensions-extensionsElement", "description": null}, "optional": true, "id": "property-AcceptOption-extensions", "description": "Extensions to accept, e.g. \"jpg\", \"gif\", \"crx\"."}, {"parent_name": "AcceptOption", "functions": [], "name": "description", "simple_type": "string", "properties": [], "optional": true, "id": "property-AcceptOption-description", "description": "This is the optional text description for this option. If not present, a description will be automatically generated; typically containing an expanded list of valid extensions (e.g. \"text/html\" may expand to \"*.html, *.htm\")."}], "name": "AcceptOption", "simple_type": "object", "functions": [], "events": [], "id": "type-AcceptOption", "description": null}, {"properties": [{"parent_name": "ChooseEntryOptions", "functions": [], "name": "accepts", "properties": [], "array": {"parent_name": "accepts", "functions": [], "name": "acceptsElement", "properties": [], "link": {"text": "AcceptOption", "href": "#type-AcceptOption"}, "optional": false, "id": "property-accepts-acceptsElement", "description": null}, "optional": true, "id": "property-ChooseEntryOptions-accepts", "description": "The optional list of accept options for this file opener. Each option will be presented as a unique group to the end-user."}, {"parent_name": "ChooseEntryOptions", "functions": [], "name": "acceptsAllTypes", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-ChooseEntryOptions-acceptsAllTypes", "description": "Whether to accept all file types, in addition to the options specified in the accepts argument. The default is true. If the accepts field is unset or contains no valid entries, this will always be reset to true."}, {"parent_name": "ChooseEntryOptions", "functions": [], "name": "suggestedName", "simple_type": "string", "properties": [], "optional": true, "id": "property-ChooseEntryOptions-suggestedName", "description": "The suggested file name that will be presented to the user as the default name to read or write. This is optional."}, {"parent_name": "ChooseEntryOptions", "functions": [], "name": "type", "simple_type": "string", "properties": [], "optional": true, "id": "property-ChooseEntryOptions-type", "description": "Type of the prompt to show. Valid types are 'openFile', 'openWritableFile' or 'saveFile'.<br/><br/> Both 'openFile' and 'openWritableFile' will prompt the user to open an existing file, with 'openFile' returning a read-only FileEntry on success. 'saveFile' will prompt the user to choose an existing file or a new file, and will return a writable FileEntry. Calls to chooseFile with either 'openWritableFile' or 'saveFile' will fail unless the application has the 'write' permission under 'fileSystem'.<br/><br/> The default is 'openFile'."}], "name": "ChooseEntryOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-ChooseEntryOptions", "description": null}], "properties": []}, "chrome.webstore": {"functions": [{"parent_name": null, "name": "install", "parameters": [{"parent_name": "install", "functions": [], "name": "url", "simple_type": "string", "properties": [], "optional": true, "id": "property-install-url", "description": "If you have more than one <code>&lt;link&gt;</code> tag on your page with the <code>chrome-webstore-item</code> relation, you can choose which item you'd like to install by passing in its URL here. If it is omitted, then the first (or only) link will be used. An exception will be thrown if the passed in URL does not exist on the page."}, {"parent_name": "install", "functions": [], "name": "successCallback", "simple_type": "function", "properties": [], "optional": true, "id": "property-install-successCallback", "description": "This function is invoked when inline installation successfully completes (after the dialog is shown and the user agrees to add the item to Chrome). You may wish to use this to hide the user interface element that prompted the user to install the app or extension."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "failureCallback", "parameters": [{"parent_name": "failureCallback", "functions": [], "last": true, "name": "error", "simple_type": "string", "properties": [], "optional": false, "id": "property-failureCallback-error", "description": "The failure detail. You may wish to inspect or log this for debugging purposes, but you should not rely on specific strings being passed back."}], "optional": true, "description": "This function is invoked when inline installation does not successfully complete. Possible reasons for this include the user canceling the dialog, the linked item not being found in the store, or the install being initiated from a non-verified site."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "failureCallback", "parameters": [{"parent_name": "failureCallback", "functions": [], "last": true, "name": "error", "simple_type": "string", "properties": [], "optional": false, "id": "property-failureCallback-error", "description": "The failure detail. You may wish to inspect or log this for debugging purposes, but you should not rely on specific strings being passed back."}], "optional": true, "description": "This function is invoked when inline installation does not successfully complete. Possible reasons for this include the user canceling the dialog, the linked item not being found in the store, or the install being initiated from a non-verified site."}, "returns": null, "id": "method-install", "description": null}], "events": [], "types": [], "properties": []}, "chrome.experimental.record": {"functions": [{"parent_name": null, "name": "replayURLs", "parameters": [{"parent_name": "replayURLs", "functions": [], "name": "urls", "properties": [], "array": {"parent_name": "urls", "functions": [], "name": "urlsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-urls-urlsElement", "description": null}, "optional": false, "id": "property-replayURLs-urls", "description": null}, {"parent_name": "replayURLs", "functions": [], "name": "captureDirectoryPath", "simple_type": "string", "properties": [], "optional": false, "id": "property-replayURLs-captureDirectoryPath", "description": null}, {"parent_name": "replayURLs", "functions": [], "name": "repeatCount", "simple_type": "integer", "properties": [], "optional": false, "id": "property-replayURLs-repeatCount", "description": null}, {"parent_name": "replayURLs", "functions": [], "name": "details", "properties": [], "link": {"text": "SessionDetails", "href": "#type-SessionDetails"}, "optional": true, "id": "property-replayURLs-details", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "result", "properties": [], "link": {"text": "ReplayURLsResult", "href": "#type-ReplayURLsResult"}, "optional": false, "id": "property-callback-result", "description": null}], "optional": false, "description": "Called when playback has completed."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "result", "properties": [], "link": {"text": "ReplayURLsResult", "href": "#type-ReplayURLsResult"}, "optional": false, "id": "property-callback-result", "description": null}], "optional": false, "description": "Called when playback has completed."}, "returns": null, "id": "method-replayURLs", "description": ""}, {"parent_name": null, "name": "captureURLs", "parameters": [{"parent_name": "captureURLs", "functions": [], "name": "urls", "properties": [], "array": {"parent_name": "urls", "functions": [], "name": "urlsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-urls-urlsElement", "description": null}, "optional": false, "id": "property-captureURLs-urls", "description": null}, {"parent_name": "captureURLs", "functions": [], "name": "cacheDirectoryPath", "simple_type": "string", "properties": [], "optional": false, "id": "property-captureURLs-cacheDirectoryPath", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "errors", "properties": [], "array": {"parent_name": "errors", "functions": [], "name": "errorsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-errors-errorsElement", "description": null}, "optional": false, "id": "property-callback-errors", "description": null}], "optional": true, "description": "Called when capture has completed."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "errors", "properties": [], "array": {"parent_name": "errors", "functions": [], "name": "errorsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-errors-errorsElement", "description": null}, "optional": false, "id": "property-callback-errors", "description": null}], "optional": true, "description": "Called when capture has completed."}, "returns": null, "id": "method-captureURLs", "description": ""}], "events": [], "types": [{"properties": [{"parent_name": "SessionDetails", "functions": [], "name": "extensionPath", "simple_type": "string", "properties": [], "optional": true, "id": "property-SessionDetails-extensionPath", "description": "A path to an extension to run in the session. Should be an unpacked extension."}], "name": "SessionDetails", "simple_type": "object", "functions": [], "events": [], "id": "type-SessionDetails", "description": ""}, {"properties": [{"parent_name": "ReplayURLsResult", "functions": [], "name": "runTime", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ReplayURLsResult-runTime", "description": "Time in milliseconds to complete all runs."}, {"parent_name": "ReplayURLsResult", "functions": [], "name": "stats", "simple_type": "string", "properties": [], "optional": false, "id": "property-ReplayURLsResult-stats", "description": "Full multiline dump of output stats."}, {"parent_name": "ReplayURLsResult", "functions": [], "name": "errors", "properties": [], "array": {"parent_name": "errors", "functions": [], "name": "errorsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-errors-errorsElement", "description": null}, "optional": false, "id": "property-ReplayURLsResult-errors", "description": "List of errors during replay."}], "name": "ReplayURLsResult", "simple_type": "object", "functions": [], "events": [], "id": "type-ReplayURLsResult", "description": ""}], "properties": []}, "chrome.types": {"functions": [], "events": [], "types": [{"properties": [], "name": "ChromeSetting", "simple_type": "object", "functions": [{"parent_name": "ChromeSetting", "name": "clear", "parameters": [{"parent_name": "clear", "functions": [], "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "scope", "properties": [], "enum_values": [{"name": "regular"}, {"name": "regular_only"}, {"name": "incognito_persistent"}, {"last": true, "name": "incognito_session_only"}], "optional": true, "id": "property-details-scope", "description": "Where to clear the setting (default: regular). One of<br><var>regular</var>: setting for the regular profile (which is inherited by the incognito profile if not overridden elsewhere),<br><var>regular_only</var>: setting for the regular profile only (not inherited by the incognito profile),<br><var>incognito_persistent</var>: setting for the incognito profile that survives browser restarts (overrides regular preferences),<br><var>incognito_session_only</var>: setting for the incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular and incognito_persistent preferences)."}], "optional": false, "id": "property-clear-details", "description": "What setting to clear."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called after the setting has been cleared."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called after the setting has been cleared."}, "returns": null, "id": "method-ChromeSetting-clear", "description": "Clears the setting. This way default settings can become effective again."}, {"parent_name": "ChromeSetting", "name": "set", "parameters": [{"parent_name": "set", "functions": [], "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "scope", "properties": [], "enum_values": [{"name": "regular"}, {"name": "regular_only"}, {"name": "incognito_persistent"}, {"last": true, "name": "incognito_session_only"}], "optional": true, "id": "property-details-scope", "description": "Where to set the setting (default: regular). One of<br><var>regular</var>: setting for the regular profile (which is inherited by the incognito profile if not overridden elsewhere),<br><var>regular_only</var>: setting for the regular profile only (not inherited by the incognito profile),<br><var>incognito_persistent</var>: setting for the incognito profile that survives browser restarts (overrides regular preferences),<br><var>incognito_session_only</var>: setting for the incognito profile that can only be set during an incognito session and is deleted when the incognito session ends (overrides regular and incognito_persistent preferences)."}, {"parent_name": "details", "functions": [], "name": "value", "simple_type": "any", "properties": [], "optional": false, "id": "property-details-value", "description": "The value of the setting. <br>Note that every setting has a specific value type, which is described together with the setting. An extension should <em>not</em> set a value of a different type."}], "optional": false, "id": "property-set-details", "description": "What setting to change."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called after the setting has been set."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called after the setting has been set."}, "returns": null, "id": "method-ChromeSetting-set", "description": "Sets the value of a setting."}, {"parent_name": "ChromeSetting", "name": "get", "parameters": [{"parent_name": "get", "functions": [], "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "incognito", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-details-incognito", "description": "Whether to return the setting that applies to the incognito session (default false)."}], "optional": false, "id": "property-get-details", "description": "What setting to consider."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "levelOfControl", "properties": [], "enum_values": [{"name": "not_controllable"}, {"name": "controlled_by_other_extensions"}, {"name": "controllable_by_this_extension"}, {"last": true, "name": "controlled_by_this_extension"}], "optional": false, "id": "property-details-levelOfControl", "description": "One of<br><var>not_controllable</var>: cannot be controlled by any extension<br><var>controlled_by_other_extensions</var>: controlled by extensions with higher precedence<br><var>controllable_by_this_extension</var>: can be controlled by this extension<br><var>controlled_by_this_extension</var>: controlled by this extension"}, {"parent_name": "details", "functions": [], "name": "value", "simple_type": "any", "properties": [], "optional": false, "id": "property-details-value", "description": "The value of the setting."}, {"parent_name": "details", "functions": [], "name": "incognitoSpecific", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-details-incognitoSpecific", "description": "Whether the effective value is specific to the incognito session.<br>This property will <em>only</em> be present if the <var>incognito</var> property in the <var>details</var> parameter of <code>get()</code> was true."}], "optional": false, "id": "property-callback-details", "description": "Details of the currently effective value."}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "levelOfControl", "properties": [], "enum_values": [{"name": "not_controllable"}, {"name": "controlled_by_other_extensions"}, {"name": "controllable_by_this_extension"}, {"last": true, "name": "controlled_by_this_extension"}], "optional": false, "id": "property-details-levelOfControl", "description": "One of<br><var>not_controllable</var>: cannot be controlled by any extension<br><var>controlled_by_other_extensions</var>: controlled by extensions with higher precedence<br><var>controllable_by_this_extension</var>: can be controlled by this extension<br><var>controlled_by_this_extension</var>: controlled by this extension"}, {"parent_name": "details", "functions": [], "name": "value", "simple_type": "any", "properties": [], "optional": false, "id": "property-details-value", "description": "The value of the setting."}, {"parent_name": "details", "functions": [], "name": "incognitoSpecific", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-details-incognitoSpecific", "description": "Whether the effective value is specific to the incognito session.<br>This property will <em>only</em> be present if the <var>incognito</var> property in the <var>details</var> parameter of <code>get()</code> was true."}], "optional": false, "id": "property-callback-details", "description": "Details of the currently effective value."}], "optional": false, "description": null}, "returns": null, "id": "method-ChromeSetting-get", "description": "Gets the value of a setting."}], "events": [{"callback": null, "name": "onChange", "parameters": [{"parent_name": "onChange", "functions": [], "last": true, "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "levelOfControl", "properties": [], "enum_values": [{"name": "not_controllable"}, {"name": "controlled_by_other_extensions"}, {"name": "controllable_by_this_extension"}, {"last": true, "name": "controlled_by_this_extension"}], "optional": false, "id": "property-details-levelOfControl", "description": "One of<br><var>not_controllable</var>: cannot be controlled by any extension<br><var>controlled_by_other_extensions</var>: controlled by extensions with higher precedence<br><var>controllable_by_this_extension</var>: can be controlled by this extension<br><var>controlled_by_this_extension</var>: controlled by this extension"}, {"parent_name": "details", "functions": [], "name": "value", "simple_type": "any", "properties": [], "optional": false, "id": "property-details-value", "description": "The value of the setting."}, {"parent_name": "details", "functions": [], "name": "incognitoSpecific", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-details-incognitoSpecific", "description": "Whether the value that has changed is specific to the incognito session.<br>This property will <em>only</em> be present if the user has enabled the extension in incognito mode."}], "optional": false, "id": "property-onChange-details", "description": null}], "parent_name": "ChromeSetting", "supportsRules": false, "filters": [], "conditions": [], "id": "event-ChromeSetting-onChange", "actions": [], "description": "Fired when the value of the setting changes."}], "id": "type-ChromeSetting", "description": "An interface which allows access to a Chrome browser setting."}], "properties": []}, "chrome.serial": {"functions": [{"parent_name": null, "name": "read", "parameters": [{"parent_name": "read", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-read-connectionId", "description": "The id of the connection."}, {"parent_name": "read", "functions": [], "name": "bytesToRead", "simple_type": "integer", "properties": [], "optional": false, "id": "property-read-bytesToRead", "description": "The number of bytes to read."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ReadCallback", "parameters": [{"parent_name": "ReadCallback", "functions": [], "last": true, "name": "readInfo", "properties": [], "link": {"text": "ReadInfo", "href": "#type-ReadInfo"}, "optional": false, "id": "property-ReadCallback-readInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ReadCallback", "parameters": [{"parent_name": "ReadCallback", "functions": [], "last": true, "name": "readInfo", "properties": [], "link": {"text": "ReadInfo", "href": "#type-ReadInfo"}, "optional": false, "id": "property-ReadCallback-readInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-read", "description": "Reads a byte from the given connection."}, {"parent_name": null, "name": "setControlSignals", "parameters": [{"parent_name": "setControlSignals", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-setControlSignals-connectionId", "description": null}, {"parent_name": "setControlSignals", "functions": [], "name": "options", "properties": [], "link": {"text": "ControlSignalOptions", "href": "#type-ControlSignalOptions"}, "optional": false, "id": "property-setControlSignals-options", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "SetControlSignalsCallback", "parameters": [{"parent_name": "SetControlSignalsCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SetControlSignalsCallback-result", "description": null}], "optional": false, "description": "Returns true if operation was successful."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "SetControlSignalsCallback", "parameters": [{"parent_name": "SetControlSignalsCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SetControlSignalsCallback-result", "description": null}], "optional": false, "description": "Returns true if operation was successful."}, "returns": null, "id": "method-setControlSignals", "description": null}, {"parent_name": null, "name": "getPorts", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "GetPortsCallback", "parameters": [{"parent_name": "GetPortsCallback", "functions": [], "last": true, "name": "ports", "properties": [], "array": {"parent_name": "ports", "functions": [], "name": "portsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-ports-portsElement", "description": null}, "optional": false, "id": "property-GetPortsCallback-ports", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetPortsCallback", "parameters": [{"parent_name": "GetPortsCallback", "functions": [], "last": true, "name": "ports", "properties": [], "array": {"parent_name": "ports", "functions": [], "name": "portsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-ports-portsElement", "description": null}, "optional": false, "id": "property-GetPortsCallback-ports", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getPorts", "description": "Returns names of valid ports on this machine, each of which is likely to be valid to pass as the port argument to open(). The list is regenerated each time this method is called, as port validity is dynamic."}, {"parent_name": null, "name": "getControlSignals", "parameters": [{"parent_name": "getControlSignals", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-getControlSignals-connectionId", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetControlSignalsCallback", "parameters": [{"parent_name": "GetControlSignalsCallback", "functions": [], "last": true, "name": "options", "properties": [], "link": {"text": "ControlSignalOptions", "href": "#type-ControlSignalOptions"}, "optional": false, "id": "property-GetControlSignalsCallback-options", "description": null}], "optional": false, "description": "Returns a snapshot of current control signals."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetControlSignalsCallback", "parameters": [{"parent_name": "GetControlSignalsCallback", "functions": [], "last": true, "name": "options", "properties": [], "link": {"text": "ControlSignalOptions", "href": "#type-ControlSignalOptions"}, "optional": false, "id": "property-GetControlSignalsCallback-options", "description": null}], "optional": false, "description": "Returns a snapshot of current control signals."}, "returns": null, "id": "method-getControlSignals", "description": null}, {"parent_name": null, "name": "write", "parameters": [{"parent_name": "write", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-write-connectionId", "description": "The id of the connection."}, {"parent_name": "write", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-write-data", "description": "The string to write."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "WriteCallback", "parameters": [{"parent_name": "WriteCallback", "functions": [], "last": true, "name": "writeInfo", "properties": [], "link": {"text": "WriteInfo", "href": "#type-WriteInfo"}, "optional": false, "id": "property-WriteCallback-writeInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "WriteCallback", "parameters": [{"parent_name": "WriteCallback", "functions": [], "last": true, "name": "writeInfo", "properties": [], "link": {"text": "WriteInfo", "href": "#type-WriteInfo"}, "optional": false, "id": "property-WriteCallback-writeInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-write", "description": "Writes a string to the given connection."}, {"parent_name": null, "name": "flush", "parameters": [{"parent_name": "flush", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-flush-connectionId", "description": "The id of the connection."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "FlushCallback", "parameters": [{"parent_name": "FlushCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-FlushCallback-result", "description": null}], "optional": false, "description": "Returns true if operation was successful."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "FlushCallback", "parameters": [{"parent_name": "FlushCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-FlushCallback-result", "description": null}], "optional": false, "description": "Returns true if operation was successful."}, "returns": null, "id": "method-flush", "description": "Flushes all bytes in the given connection's input and output buffers."}, {"parent_name": null, "name": "close", "parameters": [{"parent_name": "close", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-close-connectionId", "description": "The id of the opened connection."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "CloseCallback", "parameters": [{"parent_name": "CloseCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-CloseCallback-result", "description": null}], "optional": false, "description": "Returns true if operation was successful."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "CloseCallback", "parameters": [{"parent_name": "CloseCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-CloseCallback-result", "description": null}], "optional": false, "description": "Returns true if operation was successful."}, "returns": null, "id": "method-close", "description": "Closes an open connection."}, {"parent_name": null, "name": "open", "parameters": [{"parent_name": "open", "functions": [], "name": "port", "simple_type": "string", "properties": [], "optional": false, "id": "property-open-port", "description": "The name of the serial port to open."}, {"parent_name": "open", "functions": [], "name": "options", "properties": [], "link": {"text": "OpenOptions", "href": "#type-OpenOptions"}, "optional": true, "id": "property-open-options", "description": "Connection options."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "OpenCallback", "parameters": [{"parent_name": "OpenCallback", "functions": [], "last": true, "name": "openInfo", "properties": [], "link": {"text": "OpenInfo", "href": "#type-OpenInfo"}, "optional": false, "id": "property-OpenCallback-openInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "OpenCallback", "parameters": [{"parent_name": "OpenCallback", "functions": [], "last": true, "name": "openInfo", "properties": [], "link": {"text": "OpenInfo", "href": "#type-OpenInfo"}, "optional": false, "id": "property-OpenCallback-openInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-open", "description": "Opens a connection to the given serial port."}], "events": [], "types": [{"properties": [{"parent_name": "OpenOptions", "functions": [], "name": "bitrate", "simple_type": "integer", "properties": [], "optional": false, "id": "property-OpenOptions-bitrate", "description": "The requested bitrate of the connection to be opened. For compatibility with the widest range of hardware, this number should match one of commonly-available bitrates, such as 110, 300, 1200, 2400, 4800, 9600, 14400, 19200, 38400, 57600, 115200. There is no guarantee, of course, that the device connected to the serial port will support the requested bitrate, even if the port itself supports that bitrate."}], "name": "OpenOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-OpenOptions", "description": null}, {"properties": [{"parent_name": "WriteInfo", "functions": [], "name": "bytesWritten", "simple_type": "integer", "properties": [], "optional": false, "id": "property-WriteInfo-bytesWritten", "description": "The number of bytes written."}], "name": "WriteInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-WriteInfo", "description": null}, {"properties": [{"parent_name": "OpenInfo", "functions": [], "name": "connectionId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-OpenInfo-connectionId", "description": "The id of the opened connection."}], "name": "OpenInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-OpenInfo", "description": null}, {"properties": [{"parent_name": "ControlSignalOptions", "functions": [], "name": "dtr", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-ControlSignalOptions-dtr", "description": "Serial control signals that your machine can send. Missing fields will be set to false."}, {"parent_name": "ControlSignalOptions", "functions": [], "name": "dcd", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-ControlSignalOptions-dcd", "description": "Serial control signals that your machine can receive. If a get operation fails, success will be false, and these fields will be absent.<br/><br/> DCD (Data Carrier Detect) is equivalent to RLSD (Receive Line Signal Detect) on some platforms."}, {"parent_name": "ControlSignalOptions", "functions": [], "name": "rts", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-ControlSignalOptions-rts", "description": null}, {"parent_name": "ControlSignalOptions", "functions": [], "name": "cts", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-ControlSignalOptions-cts", "description": null}], "name": "ControlSignalOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-ControlSignalOptions", "description": null}, {"properties": [{"parent_name": "ReadInfo", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-ReadInfo-data", "description": "The data received."}, {"parent_name": "ReadInfo", "functions": [], "name": "bytesRead", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ReadInfo-bytesRead", "description": "The number of bytes received, or a negative number if an error occurred. This number will be smaller than the number of bytes requested in the original read call if the call would need to block to read that number of bytes."}], "name": "ReadInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-ReadInfo", "description": null}], "properties": []}, "chrome.experimental.identity": {"functions": [{"parent_name": null, "name": "getAuthToken", "parameters": [{"parent_name": "getAuthToken", "functions": [], "name": "details", "properties": [], "link": {"text": "TokenDetails", "href": "#type-TokenDetails"}, "optional": true, "id": "property-getAuthToken-details", "description": "Token options."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetAuthTokenCallback", "parameters": [{"parent_name": "GetAuthTokenCallback", "functions": [], "last": true, "name": "token", "simple_type": "string", "properties": [], "optional": true, "id": "property-GetAuthTokenCallback-token", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetAuthTokenCallback", "parameters": [{"parent_name": "GetAuthTokenCallback", "functions": [], "last": true, "name": "token", "simple_type": "string", "properties": [], "optional": true, "id": "property-GetAuthTokenCallback-token", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getAuthToken", "description": "Gets an OAuth2 access token as specified by the manifest."}, {"parent_name": null, "name": "launchWebAuthFlow", "parameters": [{"parent_name": "launchWebAuthFlow", "functions": [], "name": "details", "properties": [], "link": {"text": "WebAuthFlowDetails", "href": "#type-WebAuthFlowDetails"}, "optional": false, "id": "property-launchWebAuthFlow-details", "description": "WebAuth flow options."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "LaunchWebAuthFlowCallback", "parameters": [{"parent_name": "LaunchWebAuthFlowCallback", "functions": [], "last": true, "name": "responseUrl", "simple_type": "string", "properties": [], "optional": true, "id": "property-LaunchWebAuthFlowCallback-responseUrl", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "LaunchWebAuthFlowCallback", "parameters": [{"parent_name": "LaunchWebAuthFlowCallback", "functions": [], "last": true, "name": "responseUrl", "simple_type": "string", "properties": [], "optional": true, "id": "property-LaunchWebAuthFlowCallback-responseUrl", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-launchWebAuthFlow", "description": "Starts an auth flow at the specified URL."}], "events": [], "types": [{"properties": [{"parent_name": "TokenDetails", "functions": [], "name": "interactive", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-TokenDetails-interactive", "description": "Whether to prompt the user to log in or grant scope permissions (if they have not already done so). Default is false."}], "name": "TokenDetails", "simple_type": "object", "functions": [], "events": [], "id": "type-TokenDetails", "description": null}, {"properties": [{"parent_name": "WebAuthFlowDetails", "functions": [], "name": "url", "simple_type": "string", "properties": [], "optional": false, "id": "property-WebAuthFlowDetails-url", "description": "The URL that initiates the auth flow."}, {"parent_name": "WebAuthFlowDetails", "functions": [], "name": "interactive", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-WebAuthFlowDetails-interactive", "description": "Whether to launch auth flow in interactive mode. Default is false."}], "name": "WebAuthFlowDetails", "simple_type": "object", "functions": [], "events": [], "id": "type-WebAuthFlowDetails", "description": null}], "properties": []}, "chrome.i18n": {"functions": [{"parent_name": null, "name": "getMessage", "parameters": [{"parent_name": "getMessage", "functions": [], "name": "messageName", "simple_type": "string", "properties": [], "optional": false, "id": "property-getMessage-messageName", "description": "The name of the message, as specified in the <a href='i18n-messages.html'><code>messages.json</code></a> file."}, {"parent_name": "getMessage", "functions": [], "last": true, "name": "substitutions", "simple_type": "any", "properties": [], "optional": true, "id": "property-getMessage-substitutions", "description": "Up to 9 substitution strings, if the message requires any."}], "callback": null, "returns": {"parent_name": "getMessage", "functions": [], "name": "return", "simple_type": "string", "properties": [], "optional": false, "id": "property-getMessage-return", "description": "Message localized for current locale."}, "id": "method-getMessage", "description": "Gets the localized string for the specified message. If the message is missing, this method returns an empty string (''). If the format of the <code>getMessage()</code> call is wrong &mdash; for example, <em>messageName</em> is not a string or the <em>substitutions</em> array has more than 9 elements &mdash; this method returns <code>undefined</code>."}, {"parent_name": null, "name": "getAcceptLanguages", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "languages", "properties": [], "array": {"parent_name": "languages", "functions": [], "name": "languagesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-languages-languagesElement", "description": null}, "optional": false, "id": "property-callback-languages", "description": "Array of the accept languages of the browser, such as en-US,en,zh-CN"}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "languages", "properties": [], "array": {"parent_name": "languages", "functions": [], "name": "languagesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-languages-languagesElement", "description": null}, "optional": false, "id": "property-callback-languages", "description": "Array of the accept languages of the browser, such as en-US,en,zh-CN"}], "optional": false, "description": null}, "returns": null, "id": "method-getAcceptLanguages", "description": "Gets the accept-languages of the browser. This is different from the locale used by the browser; to get the locale, use <code>window.navigator.language</code>."}], "events": [], "types": [], "properties": []}, "chrome.app.runtime": {"functions": [], "events": [{"callback": null, "name": "onLaunched", "parameters": [{"parent_name": "onLaunched", "functions": [], "last": true, "name": "launchData", "properties": [], "link": {"text": "LaunchData", "href": "#type-LaunchData"}, "optional": true, "id": "property-onLaunched-launchData", "description": null}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onLaunched", "actions": [], "description": null}], "types": [{"properties": [{"parent_name": "IntentResponse", "functions": [], "name": "intentId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-IntentResponse-intentId", "description": "Identifies the intent."}, {"parent_name": "IntentResponse", "functions": [], "name": "data", "simple_type": "any", "properties": [], "optional": false, "id": "property-IntentResponse-data", "description": "Data associated with the intent response."}, {"parent_name": "IntentResponse", "functions": [], "name": "success", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-IntentResponse-success", "description": "Was this intent successful? (i.e., postSuccess vs postFailure)."}], "name": "IntentResponse", "simple_type": "object", "functions": [], "events": [], "id": "type-IntentResponse", "description": null}, {"properties": [{"parent_name": "Intent", "functions": [], "name": "action", "simple_type": "string", "properties": [], "optional": false, "id": "property-Intent-action", "description": "The WebIntent being invoked."}, {"parent_name": "Intent", "functions": [], "name": "data", "simple_type": "any", "properties": [], "optional": false, "id": "property-Intent-data", "description": "Data associated with the intent."}, {"parent_name": "Intent", "functions": [], "name": "postResult", "simple_type": "function", "properties": [], "optional": false, "id": "property-Intent-postResult", "description": "Callback to be compatible with WebIntents."}, {"parent_name": "Intent", "functions": [], "name": "type", "simple_type": "string", "properties": [], "optional": false, "id": "property-Intent-type", "description": "The MIME type of the data."}, {"parent_name": "Intent", "functions": [], "name": "postFailure", "simple_type": "function", "properties": [], "optional": false, "id": "property-Intent-postFailure", "description": "Callback to be compatible with WebIntents."}], "name": "Intent", "simple_type": "object", "functions": [], "events": [], "id": "type-Intent", "description": null}, {"properties": [{"parent_name": "LaunchData", "functions": [], "name": "intent", "properties": [], "link": {"text": "Intent", "href": "#type-Intent"}, "optional": false, "id": "property-LaunchData-intent", "description": null}], "name": "LaunchData", "simple_type": "object", "functions": [], "events": [], "id": "type-LaunchData", "description": null}], "properties": []}, "chrome.experimental.bluetooth": {"functions": [{"parent_name": null, "name": "isPowered", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "BooleanCallback", "parameters": [{"parent_name": "BooleanCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-BooleanCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "BooleanCallback", "parameters": [{"parent_name": "BooleanCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-BooleanCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-isPowered", "description": "Checks if the system's Bluetooth module has power."}, {"parent_name": null, "name": "disconnect", "parameters": [{"parent_name": "disconnect", "functions": [], "name": "options", "properties": [], "link": {"text": "DisconnectOptions", "href": "#type-DisconnectOptions"}, "optional": false, "id": "property-disconnect-options", "description": "The options for this function."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-disconnect", "description": "Close a Bluetooth connection."}, {"parent_name": null, "name": "read", "parameters": [{"parent_name": "read", "functions": [], "name": "options", "properties": [], "link": {"text": "ReadOptions", "href": "#type-ReadOptions"}, "optional": false, "id": "property-read-options", "description": "The options for this function."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "DataCallback", "parameters": [{"parent_name": "DataCallback", "functions": [], "last": true, "name": "result", "simple_type": "arraybuffer", "properties": [], "optional": true, "id": "property-DataCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "DataCallback", "parameters": [{"parent_name": "DataCallback", "functions": [], "last": true, "name": "result", "simple_type": "arraybuffer", "properties": [], "optional": true, "id": "property-DataCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-read", "description": "Read data from a Bluetooth connection."}, {"parent_name": null, "name": "setOutOfBandPairingData", "parameters": [{"parent_name": "setOutOfBandPairingData", "functions": [], "name": "options", "properties": [], "link": {"text": "SetOutOfBandPairingDataOptions", "href": "#type-SetOutOfBandPairingDataOptions"}, "optional": false, "id": "property-setOutOfBandPairingData-options", "description": "The options for this function."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-setOutOfBandPairingData", "description": "Set the Out of Band Pairing data for a remote device. Any previous Out Of Band Pairing Data for this device is overwritten."}, {"parent_name": null, "name": "getName", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "NameCallback", "parameters": [{"parent_name": "NameCallback", "functions": [], "last": true, "name": "result", "simple_type": "string", "properties": [], "optional": false, "id": "property-NameCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "NameCallback", "parameters": [{"parent_name": "NameCallback", "functions": [], "last": true, "name": "result", "simple_type": "string", "properties": [], "optional": false, "id": "property-NameCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getName", "description": "Get the name of the Bluetooth adapter."}, {"parent_name": null, "name": "getAddress", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "AddressCallback", "parameters": [{"parent_name": "AddressCallback", "functions": [], "last": true, "name": "result", "simple_type": "string", "properties": [], "optional": false, "id": "property-AddressCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "AddressCallback", "parameters": [{"parent_name": "AddressCallback", "functions": [], "last": true, "name": "result", "simple_type": "string", "properties": [], "optional": false, "id": "property-AddressCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getAddress", "description": "Get the Bluetooth address of the system's Bluetooth module."}, {"parent_name": null, "name": "getDevices", "parameters": [{"parent_name": "getDevices", "functions": [], "name": "options", "properties": [], "link": {"text": "GetDevicesOptions", "href": "#type-GetDevicesOptions"}, "optional": false, "id": "property-getDevices-options", "description": "Controls which devices are returned and provides              |deviceCallback|, which is called for each matching device."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": false, "description": null}, "returns": null, "id": "method-getDevices", "description": "Get a bluetooth devices known to the system.  Known devices are either currently bonded, or have been bonded in the past."}, {"parent_name": null, "name": "write", "parameters": [{"parent_name": "write", "functions": [], "name": "options", "properties": [], "link": {"text": "WriteOptions", "href": "#type-WriteOptions"}, "optional": false, "id": "property-write-options", "description": "The options for this function."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "SizeCallback", "parameters": [{"parent_name": "SizeCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-SizeCallback-result", "description": null}], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "SizeCallback", "parameters": [{"parent_name": "SizeCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-SizeCallback-result", "description": null}], "optional": true, "description": null}, "returns": null, "id": "method-write", "description": "Write data to a Bluetooth connection."}, {"parent_name": null, "name": "getLocalOutOfBandPairingData", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "OutOfBandPairingDataCallback", "parameters": [{"parent_name": "OutOfBandPairingDataCallback", "functions": [], "last": true, "name": "data", "properties": [], "link": {"text": "OutOfBandPairingData", "href": "#type-OutOfBandPairingData"}, "optional": false, "id": "property-OutOfBandPairingDataCallback-data", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "OutOfBandPairingDataCallback", "parameters": [{"parent_name": "OutOfBandPairingDataCallback", "functions": [], "last": true, "name": "data", "properties": [], "link": {"text": "OutOfBandPairingData", "href": "#type-OutOfBandPairingData"}, "optional": false, "id": "property-OutOfBandPairingDataCallback-data", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getLocalOutOfBandPairingData", "description": "Get the local Out of Band Pairing data."}, {"parent_name": null, "name": "connect", "parameters": [{"parent_name": "connect", "functions": [], "name": "options", "properties": [], "link": {"text": "ConnectOptions", "href": "#type-ConnectOptions"}, "optional": false, "id": "property-connect-options", "description": "The options for the connection."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "SocketCallback", "parameters": [{"parent_name": "SocketCallback", "functions": [], "last": true, "name": "result", "properties": [], "link": {"text": "Socket", "href": "#type-Socket"}, "optional": false, "id": "property-SocketCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "SocketCallback", "parameters": [{"parent_name": "SocketCallback", "functions": [], "last": true, "name": "result", "properties": [], "link": {"text": "Socket", "href": "#type-Socket"}, "optional": false, "id": "property-SocketCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-connect", "description": "Connect to a service on a device."}, {"parent_name": null, "name": "getServices", "parameters": [{"parent_name": "getServices", "functions": [], "name": "options", "properties": [], "link": {"text": "GetServicesOptions", "href": "#type-GetServicesOptions"}, "optional": false, "id": "property-getServices-options", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ServicesCallback", "parameters": [{"parent_name": "ServicesCallback", "functions": [], "last": true, "name": "result", "properties": [], "array": {"parent_name": "result", "functions": [], "name": "resultElement", "properties": [], "link": {"text": "ServiceRecord", "href": "#type-ServiceRecord"}, "optional": false, "id": "property-result-resultElement", "description": null}, "optional": false, "id": "property-ServicesCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ServicesCallback", "parameters": [{"parent_name": "ServicesCallback", "functions": [], "last": true, "name": "result", "properties": [], "array": {"parent_name": "result", "functions": [], "name": "resultElement", "properties": [], "link": {"text": "ServiceRecord", "href": "#type-ServiceRecord"}, "optional": false, "id": "property-result-resultElement", "description": null}, "optional": false, "id": "property-ServicesCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getServices", "description": "Get a list of services provided by a device."}, {"parent_name": null, "name": "isAvailable", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "BooleanCallback", "parameters": [{"parent_name": "BooleanCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-BooleanCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "BooleanCallback", "parameters": [{"parent_name": "BooleanCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-BooleanCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-isAvailable", "description": "Checks if the system has Bluetooth support."}, {"parent_name": null, "name": "startDiscovery", "parameters": [{"parent_name": "startDiscovery", "functions": [], "name": "options", "properties": [], "link": {"text": "StartDiscoveryOptions", "href": "#type-StartDiscoveryOptions"}, "optional": false, "id": "property-startDiscovery-options", "description": "The options for this function."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-startDiscovery", "description": "Start discovery. Discovered devices will be returned via the |onDeviceDiscovered| callback.  Discovery will fail to start if it is already in progress.  Discovery can be resource intensive: stopDiscovery should be called as soon as possible."}, {"parent_name": null, "name": "stopDiscovery", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ResultCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-stopDiscovery", "description": "Stop discovery."}], "events": [{"callback": null, "name": "onDiscoveringChanged", "parameters": [{"parent_name": "onDiscoveringChanged", "functions": [], "last": true, "name": "discovering", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-onDiscoveringChanged-discovering", "description": "True if the system is currently in discovery mode, false                 otherwise."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onDiscoveringChanged", "actions": [], "description": "Fired when the discovering state of the system changes."}, {"callback": null, "name": "onPowerChanged", "parameters": [{"parent_name": "onPowerChanged", "functions": [], "last": true, "name": "has_power", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-onPowerChanged-has_power", "description": null}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onPowerChanged", "actions": [], "description": "Fired when the power state of Bluetooth on the system changes."}, {"callback": null, "name": "onAvailabilityChanged", "parameters": [{"parent_name": "onAvailabilityChanged", "functions": [], "last": true, "name": "available", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-onAvailabilityChanged-available", "description": "True if Bluetooth is available, false otherwise."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onAvailabilityChanged", "actions": [], "description": "Fired when the availability of Bluetooth on the system changes."}], "types": [{"properties": [{"parent_name": "Socket", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-Socket-device", "description": null}, {"parent_name": "Socket", "functions": [], "name": "serviceUuid", "simple_type": "string", "properties": [], "optional": false, "id": "property-Socket-serviceUuid", "description": null}, {"parent_name": "Socket", "functions": [], "name": "id", "simple_type": "integer", "properties": [], "optional": false, "id": "property-Socket-id", "description": null}], "name": "Socket", "simple_type": "object", "functions": [], "events": [], "id": "type-Socket", "description": null}, {"properties": [{"parent_name": "WriteOptions", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-WriteOptions-data", "description": "The data to write."}, {"parent_name": "WriteOptions", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-WriteOptions-socketId", "description": "The socket to write to."}], "name": "WriteOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-WriteOptions", "description": null}, {"properties": [{"parent_name": "ServiceRecord", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": false, "id": "property-ServiceRecord-name", "description": "The name of the service."}, {"parent_name": "ServiceRecord", "functions": [], "name": "uuid", "simple_type": "string", "properties": [], "optional": true, "id": "property-ServiceRecord-uuid", "description": "The UUID of the service."}], "name": "ServiceRecord", "simple_type": "object", "functions": [], "events": [], "id": "type-ServiceRecord", "description": null}, {"properties": [{"parent_name": "ConnectOptions", "functions": [], "name": "serviceUuid", "simple_type": "string", "properties": [], "optional": false, "id": "property-ConnectOptions-serviceUuid", "description": "The connection is made to the service with UUID |serviceUuid|."}, {"parent_name": "ConnectOptions", "functions": [], "name": "deviceAddress", "simple_type": "string", "properties": [], "optional": false, "id": "property-ConnectOptions-deviceAddress", "description": "The connection is made to the device at |deviceAddress|. |deviceAddress| should be in the format 'XX:XX:XX:XX:XX:XX'."}], "name": "ConnectOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-ConnectOptions", "description": null}, {"properties": [{"parent_name": "ReadOptions", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ReadOptions-socketId", "description": "The socket to read from."}], "name": "ReadOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-ReadOptions", "description": null}, {"properties": [{"parent_name": "GetServicesOptions", "functions": [], "name": "deviceAddress", "simple_type": "string", "properties": [], "optional": false, "id": "property-GetServicesOptions-deviceAddress", "description": "The address of the device to inquire about. |deviceAddress| should be in the format 'XX:XX:XX:XX:XX:XX'."}], "name": "GetServicesOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-GetServicesOptions", "description": null}, {"properties": [{"parent_name": "SetOutOfBandPairingDataOptions", "functions": [], "name": "data", "properties": [], "link": {"text": "OutOfBandPairingData", "href": "#type-OutOfBandPairingData"}, "optional": true, "id": "property-SetOutOfBandPairingDataOptions-data", "description": "The Out Of Band Pairing Data. If this is omitted, the data for the device is cleared instead."}, {"parent_name": "SetOutOfBandPairingDataOptions", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-SetOutOfBandPairingDataOptions-address", "description": "The address of the remote device that the data should be associated with. |deviceAddress| should be in the format 'XX:XX:XX:XX:XX:XX'."}], "name": "SetOutOfBandPairingDataOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-SetOutOfBandPairingDataOptions", "description": null}, {"properties": [{"parent_name": "Device", "functions": [], "name": "paired", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-Device-paired", "description": "Indicates whether or not the device is paired with the system."}, {"parent_name": "Device", "functions": [], "name": "connected", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-Device-connected", "description": "Indicates whether the device is currently connected to the system."}, {"parent_name": "Device", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": false, "id": "property-Device-name", "description": "The human-readable name of the device."}, {"parent_name": "Device", "functions": [], "name": "bonded", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-Device-bonded", "description": "Indicates whether or not the device is bonded with the system. A device is bonded if it is paired and high-security link keys have been exchanged so that connections may be encrypted."}, {"parent_name": "Device", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-Device-address", "description": "The address of the device, in the format 'XX:XX:XX:XX:XX:XX'."}], "name": "Device", "simple_type": "object", "functions": [], "events": [], "id": "type-Device", "description": null}, {"properties": [{"parent_name": "DisconnectOptions", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-DisconnectOptions-socketId", "description": "The socket to disconnect."}], "name": "DisconnectOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-DisconnectOptions", "description": null}, {"properties": [{"parent_name": "OutOfBandPairingData", "functions": [], "name": "hash", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-OutOfBandPairingData-hash", "description": "Simple Pairing Hash C. Always 16 octets long."}, {"parent_name": "OutOfBandPairingData", "functions": [], "name": "randomizer", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-OutOfBandPairingData-randomizer", "description": "Simple Pairing Randomizer R. Always 16 octets long."}], "name": "OutOfBandPairingData", "simple_type": "object", "functions": [], "events": [], "id": "type-OutOfBandPairingData", "description": null}, {"properties": [{"parent_name": "GetDevicesOptions", "functions": [], "name": "deviceCallback", "simple_type": "function", "properties": [], "optional": false, "id": "property-GetDevicesOptions-deviceCallback", "description": "Called for each matching device.  Note that a service discovery request must be made to each non-matching device before it can be definitively excluded.  This can take some time."}, {"parent_name": "GetDevicesOptions", "functions": [], "name": "uuid", "simple_type": "string", "properties": [], "optional": true, "id": "property-GetDevicesOptions-uuid", "description": "Only devices providing a service with a UUID that matches |uuid| will be returned."}, {"parent_name": "GetDevicesOptions", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": true, "id": "property-GetDevicesOptions-name", "description": "Only devices providing a service with a name that matches |name| will be returned."}], "name": "GetDevicesOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-GetDevicesOptions", "description": null}, {"properties": [{"parent_name": "StartDiscoveryOptions", "functions": [], "name": "deviceCallback", "simple_type": "function", "properties": [], "optional": false, "id": "property-StartDiscoveryOptions-deviceCallback", "description": "Called for each device that is discovered."}], "name": "StartDiscoveryOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-StartDiscoveryOptions", "description": null}], "properties": []}, "chrome.experimental.pushMessaging": {"functions": [{"parent_name": null, "name": "getChannelId", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "ChannelIdCallback", "parameters": [{"parent_name": "ChannelIdCallback", "functions": [], "last": true, "name": "channelId", "properties": [], "link": {"text": "ChannelIdResult", "href": "#type-ChannelIdResult"}, "optional": false, "id": "property-ChannelIdCallback-channelId", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ChannelIdCallback", "parameters": [{"parent_name": "ChannelIdCallback", "functions": [], "last": true, "name": "channelId", "properties": [], "link": {"text": "ChannelIdResult", "href": "#type-ChannelIdResult"}, "optional": false, "id": "property-ChannelIdCallback-channelId", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getChannelId", "description": "Retrieves the channel ID associated with this app or extension. Typically an app or extension will want to send this value to its application server so the server can use it to trigger push messages back to the app or extension."}], "events": [{"callback": null, "name": "onMessage", "parameters": [{"parent_name": "onMessage", "functions": [], "last": true, "name": "message", "properties": [], "link": {"text": "Message", "href": "#type-Message"}, "optional": false, "id": "property-onMessage-message", "description": "The details associated with the message."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onMessage", "actions": [], "description": "Fired when a push message has been received."}], "types": [{"properties": [{"parent_name": "Message", "functions": [], "name": "subchannelId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-Message-subchannelId", "description": "The subchannel the message was sent on."}, {"parent_name": "Message", "functions": [], "name": "payload", "simple_type": "string", "properties": [], "optional": false, "id": "property-Message-payload", "description": "The payload associated with the message, if any."}], "name": "Message", "simple_type": "object", "functions": [], "events": [], "id": "type-Message", "description": null}, {"properties": [{"parent_name": "ChannelIdResult", "functions": [], "name": "channelId", "simple_type": "string", "properties": [], "optional": false, "id": "property-ChannelIdResult-channelId", "description": "The channel ID for this app to use for push messaging."}], "name": "ChannelIdResult", "simple_type": "object", "functions": [], "events": [], "id": "type-ChannelIdResult", "description": null}], "properties": []}, "chrome.runtime": {"functions": [{"parent_name": null, "name": "getBackgroundPage", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "backgroundPage", "simple_type": "global", "properties": [], "optional": true, "id": "property-callback-backgroundPage", "description": "The JavaScript 'window' object for the background page."}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "backgroundPage", "simple_type": "global", "properties": [], "optional": true, "id": "property-callback-backgroundPage", "description": "The JavaScript 'window' object for the background page."}], "optional": false, "description": null}, "returns": null, "id": "method-getBackgroundPage", "description": "Retrieves the JavaScript 'window' object for the background page running inside the current extension. If the background page is an event page, the system will ensure it is loaded before calling the callback. If there is no background page, an error is set."}, {"parent_name": null, "name": "getManifest", "parameters": [], "callback": null, "returns": {"parent_name": "getManifest", "functions": [], "name": "return", "simple_type": "object", "properties": [], "optional": false, "id": "property-getManifest-return", "description": "The manifest details."}, "id": "method-getManifest", "description": "Returns details about the app or extension from the manifest. The object returned is a serialization of the full <a href=\"manifest.html\">manifest file</a>."}, {"parent_name": null, "name": "getURL", "parameters": [{"parent_name": "getURL", "functions": [], "last": true, "name": "path", "simple_type": "string", "properties": [], "optional": false, "id": "property-getURL-path", "description": "A path to a resource within an app/extension expressed relative to its install directory."}], "callback": null, "returns": {"parent_name": "getURL", "functions": [], "name": "return", "simple_type": "string", "properties": [], "optional": false, "id": "property-getURL-return", "description": "The fully-qualified URL to the resource."}, "id": "method-getURL", "description": "Converts a relative path within an app/extension install directory to a fully-qualified URL."}], "events": [{"callback": null, "name": "onSuspend", "parameters": [], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onSuspend", "actions": [], "description": "Sent to the event page just before it is unloaded. This gives the extension opportunity to do some clean up. Note that since the page is unloading, any asynchronous operations started while handling this event are not guaranteed to complete. If more activity for the event page occurs before it gets unloaded the onSuspendCanceled event will be sent and the page won't be unloaded. "}, {"callback": null, "name": "onStartup", "parameters": [], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onStartup", "actions": [], "description": "Fired when the browser first starts up."}, {"callback": null, "name": "onInstalled", "parameters": [{"parent_name": "onInstalled", "functions": [], "last": true, "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "reason", "properties": [], "enum_values": [{"name": "install"}, {"name": "update"}, {"last": true, "name": "chrome_update"}], "optional": false, "id": "property-details-reason", "description": "The reason that this event is being dispatched."}, {"parent_name": "details", "functions": [], "name": "previousVersion", "simple_type": "string", "properties": [], "optional": true, "id": "property-details-previousVersion", "description": "Indicates the previous version of the extension, which has just been updated. This is present only if 'reason' is 'update'."}], "optional": false, "id": "property-onInstalled-details", "description": null}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onInstalled", "actions": [], "description": "Fired when the extension is first installed, when the extension is updated to a new version, and when Chrome is updated to a new version."}, {"callback": null, "name": "onSuspendCanceled", "parameters": [], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onSuspendCanceled", "actions": [], "description": "Sent after onSuspend() to indicate that the app won't be unloaded after all."}], "types": [], "properties": [{"parent_name": null, "functions": [], "name": "lastError", "simple_type": "object", "properties": [{"parent_name": "lastError", "functions": [], "name": "message", "simple_type": "string", "properties": [], "optional": true, "id": "property-lastError-message", "description": "Details about the error which occurred."}], "optional": true, "id": "property-lastError", "description": "This will be defined during an API method callback if there was an error"}, {"parent_name": null, "functions": [], "name": "id", "simple_type": "string", "properties": [], "optional": false, "id": "property-id", "description": "The ID of the extension/app."}]}, "chrome.app.window": {"functions": [{"parent_name": null, "name": "current", "parameters": [], "callback": null, "returns": null, "id": "method-current", "description": null}, {"parent_name": null, "name": "create", "parameters": [{"parent_name": "create", "functions": [], "name": "url", "simple_type": "string", "properties": [], "optional": false, "id": "property-create-url", "description": null}, {"parent_name": "create", "functions": [], "name": "options", "properties": [], "link": {"text": "CreateWindowOptions", "href": "#type-CreateWindowOptions"}, "optional": true, "id": "property-create-options", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "CreateWindowCallback", "parameters": [{"parent_name": "CreateWindowCallback", "functions": [], "last": true, "name": "created_window", "simple_type": "appwindow", "properties": [], "optional": false, "id": "property-CreateWindowCallback-created_window", "description": null}], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "CreateWindowCallback", "parameters": [{"parent_name": "CreateWindowCallback", "functions": [], "last": true, "name": "created_window", "simple_type": "appwindow", "properties": [], "optional": false, "id": "property-CreateWindowCallback-created_window", "description": null}], "optional": true, "description": null}, "returns": null, "id": "method-create", "description": "The size and position of a window can be specified in a number of different ways. The most simple option is not specifying anything at all, in which case a default size and platform dependent position will be used.<br/><br/> Another option is to use the top/left and width/height properties, which will always put the window at the specified coordinates with the specified size.<br/><br/> Yet another option is to give the window a (unique) id. This id is then used to remember the size and position of the window whenever it is moved or resized. This size and position is then used on subsequent opening of a window with the same id. The defaultLeft/defaultTop and defaultWidth/defaultHeight properties can be used to specify a position and size when no geometry has been stored for the window yet.<br/><br/> You can also combine these various options, explicitly specifying for example the size while having the position be remembered or other combinations like that. Size and position are dealt with seperately, but individual coordinates are not. So if you specify a top (or left) coordinate, you should also specify a left (or top) coordinate, and similar for size.<br/><br/> If you specify both a regular and a default value for the same option the regular value is the only one that takes effect."}], "events": [], "types": [{"properties": [{"parent_name": "AppWindow", "functions": [], "name": "restore", "simple_type": "function", "properties": [], "optional": false, "id": "property-AppWindow-restore", "description": "Restore the window."}, {"parent_name": "AppWindow", "functions": [], "name": "moveTo", "simple_type": "function", "properties": [], "optional": false, "id": "property-AppWindow-moveTo", "description": "Move the window to the position (|x|, |y|)."}, {"parent_name": "AppWindow", "functions": [], "name": "minimize", "simple_type": "function", "properties": [], "optional": false, "id": "property-AppWindow-minimize", "description": "Minimize the window."}, {"parent_name": "AppWindow", "functions": [], "name": "focus", "simple_type": "function", "properties": [], "optional": false, "id": "property-AppWindow-focus", "description": "Focus the window."}, {"parent_name": "AppWindow", "functions": [], "name": "contentWindow", "simple_type": "global", "properties": [], "optional": false, "id": "property-AppWindow-contentWindow", "description": "The JavaScript 'window' object for the created child."}, {"parent_name": "AppWindow", "functions": [], "name": "resizeTo", "simple_type": "function", "properties": [], "optional": false, "id": "property-AppWindow-resizeTo", "description": "Resize the window to |width|x|height| pixels in size."}, {"parent_name": "AppWindow", "functions": [], "name": "maximize", "simple_type": "function", "properties": [], "optional": false, "id": "property-AppWindow-maximize", "description": "Maximize the window."}], "name": "AppWindow", "simple_type": "object", "functions": [], "events": [], "id": "type-AppWindow", "description": null}, {"properties": [{"parent_name": "CreateWindowOptions", "functions": [], "name": "defaultLeft", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-defaultLeft", "description": "Default X coordinate of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "maxWidth", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-maxWidth", "description": "Maximum width of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "width", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-width", "description": "Width of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "top", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-top", "description": "Y coordinate of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "minHeight", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-minHeight", "description": "Minimum height of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "maxHeight", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-maxHeight", "description": "Maximum height of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "height", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-height", "description": "Height of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "minWidth", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-minWidth", "description": "Minimium width of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "defaultWidth", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-defaultWidth", "description": "Default width of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "defaultHeight", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-defaultHeight", "description": "Default height of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "defaultTop", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-defaultTop", "description": "Default Y coordinate of the window."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "frame", "simple_type": "string", "properties": [], "optional": true, "id": "property-CreateWindowOptions-frame", "description": "Frame type: 'none' or 'chrome' (defaults to 'chrome')."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "type", "simple_type": "string", "properties": [], "optional": true, "id": "property-CreateWindowOptions-type", "description": "Window type: 'shell' (the default) is the only currently supported value."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "id", "simple_type": "string", "properties": [], "optional": true, "id": "property-CreateWindowOptions-id", "description": "Id to identify the window. This will be used to remember the size and position of the window and restore that geometry when a window with the same id (and no explicit size or position) is later opened."}, {"parent_name": "CreateWindowOptions", "functions": [], "name": "left", "simple_type": "integer", "properties": [], "optional": true, "id": "property-CreateWindowOptions-left", "description": "X coordinate of the window."}], "name": "CreateWindowOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-CreateWindowOptions", "description": null}], "properties": []}, "chrome.events": {"functions": [], "events": [], "types": [{"properties": [{"parent_name": "UrlFilter", "functions": [], "name": "schemes", "properties": [], "array": {"parent_name": "schemes", "functions": [], "name": "schemesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-schemes-schemesElement", "description": null}, "optional": true, "id": "property-UrlFilter-schemes", "description": "Matches if the scheme of the URL is equal to any of the schemes specified in the array."}, {"parent_name": "UrlFilter", "functions": [], "name": "urlMatches", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-urlMatches", "description": "Matches if the URL (without fragment identifier) matches a specified regular expression. Port numbers are stripped from the URL if they match the default port number. The regular expressions use the <a href=\"http://code.google.com/p/re2/wiki/Syntax\">RE2 syntax</a>."}, {"parent_name": "UrlFilter", "functions": [], "name": "pathContains", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-pathContains", "description": "Matches if the path segment of the URL contains a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "hostSuffix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-hostSuffix", "description": "Matches if the host name of the URL ends with a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "hostPrefix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-hostPrefix", "description": "Matches if the host name of the URL starts with a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "hostContains", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-hostContains", "description": "Matches if the host name of the URL contains a specified string. To test whether a host name component has a prefix 'foo', use hostContains: '.foo'. This matches 'www.foobar.com' and 'foo.com', because an implicit dot is added at the beginning of the host name. Similarly, hostContains can be used to match against component suffix ('foo.') and to exactly match against components ('.foo.'). Suffix- and exact-matching for the last components need to be done separately using hostSuffix, because no implicit dot is added at the end of the host name."}, {"parent_name": "UrlFilter", "functions": [], "name": "urlContains", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-urlContains", "description": "Matches if the URL (without fragment identifier) contains a specified string. Port numbers are stripped from the URL if they match the default port number."}, {"parent_name": "UrlFilter", "functions": [], "name": "querySuffix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-querySuffix", "description": "Matches if the query segment of the URL ends with a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "urlPrefix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-urlPrefix", "description": "Matches if the URL (without fragment identifier) starts with a specified string. Port numbers are stripped from the URL if they match the default port number."}, {"parent_name": "UrlFilter", "functions": [], "name": "hostEquals", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-hostEquals", "description": "Matches if the host name of the URL is equal to a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "urlEquals", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-urlEquals", "description": "Matches if the URL (without fragment identifier) is equal to a specified string. Port numbers are stripped from the URL if they match the default port number."}, {"parent_name": "UrlFilter", "functions": [], "name": "queryContains", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-queryContains", "description": "Matches if the query segment of the URL contains a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "pathPrefix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-pathPrefix", "description": "Matches if the path segment of the URL starts with a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "pathEquals", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-pathEquals", "description": "Matches if the path segment of the URL is equal to a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "pathSuffix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-pathSuffix", "description": "Matches if the path segment of the URL ends with a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "queryEquals", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-queryEquals", "description": "Matches if the query segment of the URL is equal to a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "queryPrefix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-queryPrefix", "description": "Matches if the query segment of the URL starts with a specified string."}, {"parent_name": "UrlFilter", "functions": [], "name": "urlSuffix", "simple_type": "string", "properties": [], "optional": true, "id": "property-UrlFilter-urlSuffix", "description": "Matches if the URL (without fragment identifier) ends with a specified string. Port numbers are stripped from the URL if they match the default port number."}, {"parent_name": "UrlFilter", "functions": [], "name": "ports", "properties": [], "array": {"parent_name": "ports", "functions": [], "name": "portsElement", "properties": [], "choices": [{"parent_name": "portsElement", "functions": [], "name": "portsElement", "simple_type": "integer", "properties": [], "optional": true, "id": "property-portsElement-portsElement", "description": "A specific port."}, {"parent_name": "portsElement", "functions": [], "last": true, "name": "portsElement", "properties": [], "array": {"parent_name": "portsElement", "functions": [], "name": "portsElementElement", "simple_type": "integer", "properties": [], "optional": false, "id": "property-portsElement-portsElementElement", "description": null}, "optional": true, "id": "property-portsElement-portsElement", "description": "A pair of integers identiying the start and end (both inclusive) of a port range."}], "optional": false, "id": "property-ports-portsElement", "description": null}, "optional": true, "id": "property-UrlFilter-ports", "description": "Matches if the port of the URL is contained in any of the specified port lists. For example <code>[80, 443, [1000, 1200]]</code> matches all requests on port 80, 443 and in the range 1000-1200."}], "name": "UrlFilter", "simple_type": "object", "functions": [], "events": [], "id": "type-UrlFilter", "description": "Filters URLs for various criteria. See <a href='#filtered'>event filtering</a>."}, {"properties": [], "name": "Event", "simple_type": "object", "functions": [{"parent_name": "Event", "name": "addListener", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": false, "description": "Called when an event occurs. The parameters of this function depend on the type of event."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": false, "description": "Called when an event occurs. The parameters of this function depend on the type of event."}, "returns": null, "id": "method-Event-addListener", "description": "Registers an event listener <em>callback</em> to an event."}, {"parent_name": "Event", "name": "getRules", "parameters": [{"parent_name": "getRules", "functions": [], "name": "ruleIdentifiers", "properties": [], "array": {"parent_name": "ruleIdentifiers", "functions": [], "name": "ruleIdentifiersElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-ruleIdentifiers-ruleIdentifiersElement", "description": null}, "optional": "true", "id": "property-getRules-ruleIdentifiers", "description": "If an array is passed, only rules with identifiers contained in this array are returned."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "rules", "properties": [], "array": {"parent_name": "rules", "functions": [], "name": "rulesElement", "properties": [], "link": {"text": "Rule", "href": "#type-Rule"}, "optional": false, "id": "property-rules-rulesElement", "description": null}, "optional": false, "id": "property-callback-rules", "description": "Rules that were registered, the optional parameters are filled with values."}], "optional": false, "description": "Called with registered rules."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "rules", "properties": [], "array": {"parent_name": "rules", "functions": [], "name": "rulesElement", "properties": [], "link": {"text": "Rule", "href": "#type-Rule"}, "optional": false, "id": "property-rules-rulesElement", "description": null}, "optional": false, "id": "property-callback-rules", "description": "Rules that were registered, the optional parameters are filled with values."}], "optional": false, "description": "Called with registered rules."}, "returns": null, "id": "method-Event-getRules", "description": "Returns currently registered rules."}, {"parent_name": "Event", "name": "hasListener", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": false, "description": "Listener whose registration status shall be tested."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": false, "description": "Listener whose registration status shall be tested."}, "returns": {"parent_name": "hasListener", "functions": [], "name": "return", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-hasListener-return", "description": "True if <em>callback</em> is registered to the event."}, "id": "method-Event-hasListener", "description": null}, {"parent_name": "Event", "name": "removeRules", "parameters": [{"parent_name": "removeRules", "functions": [], "name": "ruleIdentifiers", "properties": [], "array": {"parent_name": "ruleIdentifiers", "functions": [], "name": "ruleIdentifiersElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-ruleIdentifiers-ruleIdentifiersElement", "description": null}, "optional": "true", "id": "property-removeRules-ruleIdentifiers", "description": "If an array is passed, only rules with identifiers contained in this array are unregistered."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when rules were unregistered."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called when rules were unregistered."}, "returns": null, "id": "method-Event-removeRules", "description": "Unregisters currently registered rules."}, {"parent_name": "Event", "name": "addRules", "parameters": [{"parent_name": "addRules", "functions": [], "name": "rules", "properties": [], "array": {"parent_name": "rules", "functions": [], "name": "rulesElement", "properties": [], "link": {"text": "Rule", "href": "#type-Rule"}, "optional": false, "id": "property-rules-rulesElement", "description": null}, "optional": false, "id": "property-addRules-rules", "description": "Rules to be registered. These do not replace previously registered rules."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "rules", "properties": [], "array": {"parent_name": "rules", "functions": [], "name": "rulesElement", "properties": [], "link": {"text": "Rule", "href": "#type-Rule"}, "optional": false, "id": "property-rules-rulesElement", "description": null}, "optional": false, "id": "property-callback-rules", "description": "Rules that were registered, the optional parameters are filled with values."}], "optional": true, "description": "Called with registered rules."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "rules", "properties": [], "array": {"parent_name": "rules", "functions": [], "name": "rulesElement", "properties": [], "link": {"text": "Rule", "href": "#type-Rule"}, "optional": false, "id": "property-rules-rulesElement", "description": null}, "optional": false, "id": "property-callback-rules", "description": "Rules that were registered, the optional parameters are filled with values."}], "optional": true, "description": "Called with registered rules."}, "returns": null, "id": "method-Event-addRules", "description": "Registers rules to handle events."}, {"parent_name": "Event", "name": "removeListener", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": false, "description": "Listener that shall be unregistered."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": false, "description": "Listener that shall be unregistered."}, "returns": null, "id": "method-Event-removeListener", "description": "Deregisters an event listener <em>callback</em> from an event."}, {"parent_name": "Event", "name": "hasListeners", "parameters": [], "callback": null, "returns": {"parent_name": "hasListeners", "functions": [], "name": "return", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-hasListeners-return", "description": "True if any event listeners are registered to the event."}, "id": "method-Event-hasListeners", "description": null}], "events": [], "id": "type-Event", "description": "An object which allows the addition and removal of listeners for a Chrome event."}, {"properties": [{"parent_name": "Rule", "functions": [], "name": "priority", "simple_type": "integer", "properties": [], "optional": true, "id": "property-Rule-priority", "description": "Optional priority of this rule. Defaults to 100."}, {"parent_name": "Rule", "functions": [], "name": "conditions", "properties": [], "array": {"parent_name": "conditions", "functions": [], "name": "conditionsElement", "simple_type": "any", "properties": [], "optional": false, "id": "property-conditions-conditionsElement", "description": null}, "optional": false, "id": "property-Rule-conditions", "description": "List of conditions that can trigger the actions."}, {"parent_name": "Rule", "functions": [], "name": "id", "simple_type": "string", "properties": [], "optional": true, "id": "property-Rule-id", "description": "Optional identifier that allows referencing this rule."}, {"parent_name": "Rule", "functions": [], "name": "actions", "properties": [], "array": {"parent_name": "actions", "functions": [], "name": "actionsElement", "simple_type": "any", "properties": [], "optional": false, "id": "property-actions-actionsElement", "description": null}, "optional": false, "id": "property-Rule-actions", "description": "List of actions that are triggered if one of the condtions is fulfilled."}], "name": "Rule", "simple_type": "object", "functions": [], "events": [], "id": "type-Rule", "description": "Description of a declarative rule for handling events."}], "properties": []}, "chrome.experimental.mediaGalleries": {"functions": [{"parent_name": null, "name": "extractEmbeddedThumbnails", "parameters": [{"parent_name": "extractEmbeddedThumbnails", "functions": [], "last": true, "name": "mediaFile", "simple_type": "object", "properties": [], "optional": false, "id": "property-extractEmbeddedThumbnails-mediaFile", "description": null}], "callback": null, "returns": null, "id": "method-extractEmbeddedThumbnails", "description": "Get any thumbnails contained in the passed media file. The resulting directory reader refers to a virtual directory that can not be navigated to. If there are no thumbnails in the passed file entry, the virtual directory will have no entries. TODO(estade): The return type should be Directory. The argument type should be [instanceOf=FileEntry]."}, {"parent_name": null, "name": "assembleMediaFile", "parameters": [{"parent_name": "assembleMediaFile", "functions": [], "name": "mediaFileContents", "simple_type": "blob", "properties": [], "optional": false, "id": "property-assembleMediaFile-mediaFileContents", "description": "the media bytes."}, {"parent_name": "assembleMediaFile", "functions": [], "name": "metadata", "simple_type": "object", "properties": [], "optional": false, "id": "property-assembleMediaFile-metadata", "description": "the metadata. TODO(estade): this should be [instanceOf=Metafile]."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "AssembleMediaFileCallback", "parameters": [{"parent_name": "AssembleMediaFileCallback", "functions": [], "last": true, "name": "mediaFile", "simple_type": "blob", "properties": [], "optional": true, "id": "property-AssembleMediaFileCallback-mediaFile", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "AssembleMediaFileCallback", "parameters": [{"parent_name": "AssembleMediaFileCallback", "functions": [], "last": true, "name": "mediaFile", "simple_type": "blob", "properties": [], "optional": true, "id": "property-AssembleMediaFileCallback-mediaFile", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-assembleMediaFile", "description": "Create a new MediaFile setting the metadata in the Blob to the supplied values, overriding any existing metadata in the media file. If user agent does not recognize the Blob as a supported file format, it will fail."}], "events": [], "types": [], "properties": []}, "chrome.experimental.app": {"functions": [{"parent_name": null, "name": "clearAllNotifications", "parameters": [{"parent_name": "clearAllNotifications", "functions": [], "name": "details", "simple_type": "object", "properties": [{"parent_name": "details", "functions": [], "name": "extensionId", "simple_type": "string", "properties": [], "optional": true, "id": "property-details-extensionId", "description": "An optional id to do notifications for an app other than the calling app. This is just to allow prototyping with an extension that sends notifications on behalf of apps that don't support notifications yet; this will be removed before the API becomes stable."}], "optional": true, "id": "property-clearAllNotifications-details", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "A callback when the function is complete. Any errors will be reported in <a href='extension.html#property-lastError'>chrome.extension.lastError</a>."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "A callback when the function is complete. Any errors will be reported in <a href='extension.html#property-lastError'>chrome.extension.lastError</a>."}, "returns": null, "id": "method-clearAllNotifications", "description": "Clears all previously sent notifications."}], "events": [], "types": [], "properties": []}, "chrome.tts": {"functions": [{"parent_name": null, "name": "isSpeaking", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "speaking", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-speaking", "description": "True if speaking, false otherwise."}], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "speaking", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-speaking", "description": "True if speaking, false otherwise."}], "optional": true, "description": null}, "returns": null, "id": "method-isSpeaking", "description": "Checks whether the engine is currently speaking. On Mac OS X, the result is true whenever the system speech engine is speaking, even if the speech wasn't initiated by Chrome."}, {"parent_name": null, "name": "stop", "parameters": [], "callback": null, "returns": null, "id": "method-stop", "description": "Stops any current speech."}, {"parent_name": null, "name": "getVoices", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "voices", "properties": [], "array": {"parent_name": "voices", "functions": [], "name": "voicesElement", "properties": [], "link": {"text": "TtsVoice", "href": "#type-TtsVoice"}, "optional": false, "id": "property-voices-voicesElement", "description": null}, "optional": false, "id": "property-callback-voices", "description": "Array of <a href=\"#type-TtsVoice\">TtsVoice</a> objects representing the available voices for speech synthesis."}], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "voices", "properties": [], "array": {"parent_name": "voices", "functions": [], "name": "voicesElement", "properties": [], "link": {"text": "TtsVoice", "href": "#type-TtsVoice"}, "optional": false, "id": "property-voices-voicesElement", "description": null}, "optional": false, "id": "property-callback-voices", "description": "Array of <a href=\"#type-TtsVoice\">TtsVoice</a> objects representing the available voices for speech synthesis."}], "optional": true, "description": null}, "returns": null, "id": "method-getVoices", "description": "Gets an array of all available voices."}, {"parent_name": null, "name": "speak", "parameters": [{"parent_name": "speak", "functions": [], "name": "utterance", "simple_type": "string", "properties": [], "optional": false, "id": "property-speak-utterance", "description": "The text to speak, either plain text or a complete, well-formed SSML document. Speech engines that do not support SSML will strip away the tags and speak the text. The maximum length of the text is 32,768 characters."}, {"parent_name": "speak", "functions": [], "name": "options", "simple_type": "object", "properties": [{"parent_name": "options", "functions": [], "name": "volume", "simple_type": "double", "properties": [], "optional": true, "id": "property-options-volume", "description": "Speaking volume between 0 and 1 inclusive, with 0 being lowest and 1 being highest, with a default of 1.0."}, {"parent_name": "options", "functions": [], "name": "enqueue", "simple_type": "boolean", "properties": [], "optional": true, "id": "property-options-enqueue", "description": "If true, enqueues this utterance if TTS is already in progress. If false (the default), interrupts any current speech and flushes the speech queue before speaking this new utterance."}, {"parent_name": "options", "functions": [], "name": "rate", "simple_type": "double", "properties": [], "optional": true, "id": "property-options-rate", "description": "Speaking rate relative to the default rate for this voice. 1.0 is the default rate, normally around 180 to 220 words per minute. 2.0 is twice as fast, and 0.5 is half as fast. Values below 0.1 or above 10.0 are strictly disallowed, but many voices will constrain the minimum and maximum rates further&mdash;for example a particular voice may not actually speak faster than 3 times normal even if you specify a value larger than 3.0."}, {"parent_name": "options", "functions": [], "name": "onEvent", "simple_type": "function", "properties": [], "optional": true, "id": "property-options-onEvent", "description": "This function is called with events that occur in the process of speaking the utterance."}, {"parent_name": "options", "functions": [], "name": "pitch", "simple_type": "double", "properties": [], "optional": true, "id": "property-options-pitch", "description": "Speaking pitch between 0 and 2 inclusive, with 0 being lowest and 2 being highest. 1.0 corresponds to a voice's default pitch."}, {"parent_name": "options", "functions": [], "name": "lang", "simple_type": "string", "properties": [], "optional": true, "id": "property-options-lang", "description": "The language to be used for synthesis, in the form <em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'."}, {"parent_name": "options", "functions": [], "name": "voiceName", "simple_type": "string", "properties": [], "optional": true, "id": "property-options-voiceName", "description": "The name of the voice to use for synthesis. If empty, uses any available voice."}, {"parent_name": "options", "functions": [], "name": "extensionId", "simple_type": "string", "properties": [], "optional": true, "id": "property-options-extensionId", "description": "The extension ID of the speech engine to use, if known."}, {"parent_name": "options", "functions": [], "name": "gender", "properties": [], "enum_values": [{"name": "male"}, {"last": true, "name": "female"}], "optional": true, "id": "property-options-gender", "description": "Gender of voice for synthesized speech."}, {"parent_name": "options", "functions": [], "name": "requiredEventTypes", "properties": [], "array": {"parent_name": "requiredEventTypes", "functions": [], "name": "requiredEventTypesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-requiredEventTypes-requiredEventTypesElement", "description": null}, "optional": true, "id": "property-options-requiredEventTypes", "description": "The TTS event types the voice must support."}, {"parent_name": "options", "functions": [], "name": "desiredEventTypes", "properties": [], "array": {"parent_name": "desiredEventTypes", "functions": [], "name": "desiredEventTypesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-desiredEventTypes-desiredEventTypesElement", "description": null}, "optional": true, "id": "property-options-desiredEventTypes", "description": "The TTS event types that you are interested in listening to. If missing, all event types may be sent."}], "optional": true, "id": "property-speak-options", "description": "The speech options."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called right away, before speech finishes. Check chrome.extension.lastError to make sure there were no errors. Use options.onEvent to get more detailed feedback."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Called right away, before speech finishes. Check chrome.extension.lastError to make sure there were no errors. Use options.onEvent to get more detailed feedback."}, "returns": null, "id": "method-speak", "description": "Speaks text using a text-to-speech engine."}], "events": [], "types": [{"properties": [{"parent_name": "TtsEvent", "functions": [], "name": "charIndex", "simple_type": "double", "properties": [], "optional": true, "id": "property-TtsEvent-charIndex", "description": "The index of the current character in the utterance."}, {"parent_name": "TtsEvent", "functions": [], "name": "errorMessage", "simple_type": "string", "properties": [], "optional": true, "id": "property-TtsEvent-errorMessage", "description": "The error description, if the event type is 'error'."}, {"parent_name": "TtsEvent", "functions": [], "name": "type", "properties": [], "enum_values": [{"name": "start"}, {"name": "end"}, {"name": "word"}, {"name": "sentence"}, {"name": "marker"}, {"name": "interrupted"}, {"name": "cancelled"}, {"last": true, "name": "error"}], "optional": false, "id": "property-TtsEvent-type", "description": "The type can be 'start' as soon as speech has started, 'word' when a word boundary is reached, 'sentence' when a sentence boundary is reached, 'marker' when an SSML mark element is reached, 'end' when the end of the utterance is reached, 'interrupted' when the utterance is stopped or interrupted before reaching the end, 'cancelled' when it's removed from the queue before ever being synthesized, or 'error' when any other error occurs."}], "name": "TtsEvent", "simple_type": "object", "functions": [], "events": [], "id": "type-TtsEvent", "description": "An event from the TTS engine to communicate the status of an utterance."}, {"properties": [{"parent_name": "TtsVoice", "functions": [], "name": "lang", "simple_type": "string", "properties": [], "optional": true, "id": "property-TtsVoice-lang", "description": "The language that this voice supports, in the form <em>language</em>-<em>region</em>. Examples: 'en', 'en-US', 'en-GB', 'zh-CN'."}, {"parent_name": "TtsVoice", "functions": [], "name": "gender", "properties": [], "enum_values": [{"name": "male"}, {"last": true, "name": "female"}], "optional": true, "id": "property-TtsVoice-gender", "description": "This voice's gender."}, {"parent_name": "TtsVoice", "functions": [], "name": "voiceName", "simple_type": "string", "properties": [], "optional": true, "id": "property-TtsVoice-voiceName", "description": "The name of the voice."}, {"parent_name": "TtsVoice", "functions": [], "name": "extensionId", "simple_type": "string", "properties": [], "optional": true, "id": "property-TtsVoice-extensionId", "description": "The ID of the extension providing this voice."}, {"parent_name": "TtsVoice", "functions": [], "name": "eventTypes", "properties": [], "array": {"parent_name": "eventTypes", "functions": [], "name": "eventTypesElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-eventTypes-eventTypesElement", "description": null}, "optional": true, "id": "property-TtsVoice-eventTypes", "description": "All of the callback event types that this voice is capable of sending."}], "name": "TtsVoice", "simple_type": "object", "functions": [], "events": [], "id": "type-TtsVoice", "description": "A description of a voice available for speech synthesis."}], "properties": []}, "chrome.permissions": {"functions": [{"parent_name": null, "name": "contains", "parameters": [{"parent_name": "contains", "functions": [], "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-contains-permissions", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-result", "description": "True if the extension has the specified permissions."}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-result", "description": "True if the extension has the specified permissions."}], "optional": false, "description": null}, "returns": null, "id": "method-contains", "description": "Checks if the extension has the specified permissions."}, {"parent_name": null, "name": "getAll", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-callback-permissions", "description": "The extension's active permissions."}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-callback-permissions", "description": "The extension's active permissions."}], "optional": false, "description": null}, "returns": null, "id": "method-getAll", "description": "Gets the extension's current set of permissions."}, {"parent_name": null, "name": "request", "parameters": [{"parent_name": "request", "functions": [], "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-request-permissions", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "granted", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-granted", "description": "True if the user granted the specified permissions."}], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "granted", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-granted", "description": "True if the user granted the specified permissions."}], "optional": true, "description": null}, "returns": null, "id": "method-request", "description": "Requests access to the specified permissions. These permissions must be defined in the optional_permissions field of the manifest. If there are any problems requesting the permissions, <a href='extension.html#property-lastError'>chrome.extension.lastError</a> will be set."}, {"parent_name": null, "name": "remove", "parameters": [{"parent_name": "remove", "functions": [], "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-remove-permissions", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "removed", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-removed", "description": "True if the permissions were removed."}], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "removed", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-callback-removed", "description": "True if the permissions were removed."}], "optional": true, "description": null}, "returns": null, "id": "method-remove", "description": "Removes access to the specified permissions. If there are any problems removing the permissions, <a href='extension.html#property-lastError'>chrome.extension.lastError</a> will be set."}], "events": [{"callback": null, "name": "onRemoved", "parameters": [{"parent_name": "onRemoved", "functions": [], "last": true, "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-onRemoved-permissions", "description": "The permissions that have been removed."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onRemoved", "actions": [], "description": "Fired when access to permissions has been removed from the extension."}, {"callback": null, "name": "onAdded", "parameters": [{"parent_name": "onAdded", "functions": [], "last": true, "name": "permissions", "properties": [], "link": {"text": "Permissions", "href": "#type-Permissions"}, "optional": false, "id": "property-onAdded-permissions", "description": "The newly acquired permissions."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onAdded", "actions": [], "description": "Fired when the extension acquires new permissions."}], "types": [{"properties": [{"parent_name": "Permissions", "functions": [], "name": "origins", "properties": [], "array": {"parent_name": "origins", "functions": [], "name": "originsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-origins-originsElement", "description": null}, "optional": true, "id": "property-Permissions-origins", "description": "List of origin permissions."}, {"parent_name": "Permissions", "functions": [], "name": "permissions", "properties": [], "array": {"parent_name": "permissions", "functions": [], "name": "permissionsElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-permissions-permissionsElement", "description": null}, "optional": true, "id": "property-Permissions-permissions", "description": "List of named permissions (does not include hosts or origins)."}], "name": "Permissions", "simple_type": "object", "functions": [], "events": [], "id": "type-Permissions", "description": null}], "properties": []}, "chrome.mediaGalleries": {"functions": [{"parent_name": null, "name": "getMediaFileSystems", "parameters": [{"parent_name": "getMediaFileSystems", "functions": [], "name": "details", "properties": [], "link": {"text": "MediaFileSystemsDetails", "href": "#type-MediaFileSystemsDetails"}, "optional": true, "id": "property-getMediaFileSystems-details", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "MediaFileSystemsCallback", "parameters": [{"parent_name": "MediaFileSystemsCallback", "functions": [], "last": true, "name": "mediaFileSystems", "properties": [], "array": {"parent_name": "mediaFileSystems", "functions": [], "name": "mediaFileSystemsElement", "simple_type": "localfilesystem", "properties": [], "optional": false, "id": "property-mediaFileSystems-mediaFileSystemsElement", "description": null}, "optional": true, "id": "property-MediaFileSystemsCallback-mediaFileSystems", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "MediaFileSystemsCallback", "parameters": [{"parent_name": "MediaFileSystemsCallback", "functions": [], "last": true, "name": "mediaFileSystems", "properties": [], "array": {"parent_name": "mediaFileSystems", "functions": [], "name": "mediaFileSystemsElement", "simple_type": "localfilesystem", "properties": [], "optional": false, "id": "property-mediaFileSystems-mediaFileSystemsElement", "description": null}, "optional": true, "id": "property-MediaFileSystemsCallback-mediaFileSystems", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getMediaFileSystems", "description": "Get the media galleries configured in this user agent. If none are configured or available, the callback will receive an empty array."}], "events": [], "types": [{"properties": [{"parent_name": "MediaFileSystemsDetails", "functions": [], "name": "interactive", "properties": [], "link": {"text": "GetMediaFileSystemsInteractivity", "href": "#type-GetMediaFileSystemsInteractivity"}, "optional": true, "id": "property-MediaFileSystemsDetails-interactive", "description": "Whether to prompt the user for permission to additional media galleries before returning the permitted set. Default is silent.  If the value 'yes' is passed, or if the application has not been granted access to any media galleries and the value 'if_needed' is passed, then the media gallery configuration dialog will be displayed."}], "name": "MediaFileSystemsDetails", "simple_type": "object", "functions": [], "events": [], "id": "type-MediaFileSystemsDetails", "description": null}, {"properties": [], "name": "GetMediaFileSystemsInteractivity", "functions": [], "events": [], "enum_values": [{"name": "no"}, {"name": "yes"}, {"last": true, "name": "if_needed"}], "id": "type-GetMediaFileSystemsInteractivity", "description": ""}], "properties": []}, "chrome.socket": {"functions": [{"parent_name": null, "name": "recvFrom", "parameters": [{"parent_name": "recvFrom", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-recvFrom-socketId", "description": "The socketId."}, {"parent_name": "recvFrom", "functions": [], "name": "bufferSize", "simple_type": "integer", "properties": [], "optional": true, "id": "property-recvFrom-bufferSize", "description": "The receive buffer size."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "RecvFromCallback", "parameters": [{"parent_name": "RecvFromCallback", "functions": [], "last": true, "name": "recvFromInfo", "properties": [], "link": {"text": "RecvFromInfo", "href": "#type-RecvFromInfo"}, "optional": false, "id": "property-RecvFromCallback-recvFromInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "RecvFromCallback", "parameters": [{"parent_name": "RecvFromCallback", "functions": [], "last": true, "name": "recvFromInfo", "properties": [], "link": {"text": "RecvFromInfo", "href": "#type-RecvFromInfo"}, "optional": false, "id": "property-RecvFromCallback-recvFromInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-recvFrom", "description": "Receives data from the given UDP socket."}, {"parent_name": null, "name": "disconnect", "parameters": [{"parent_name": "disconnect", "functions": [], "last": true, "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-disconnect-socketId", "description": "The socketId."}], "callback": null, "returns": null, "id": "method-disconnect", "description": "Disconnects the socket. For UDP sockets, <code>disconnect</code> is a non-operation but is safe to call."}, {"parent_name": null, "name": "getInfo", "parameters": [{"parent_name": "getInfo", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-getInfo-socketId", "description": "The socketId."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetInfoCallback", "parameters": [{"parent_name": "GetInfoCallback", "functions": [], "last": true, "name": "result", "properties": [], "link": {"text": "SocketInfo", "href": "#type-SocketInfo"}, "optional": false, "id": "property-GetInfoCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetInfoCallback", "parameters": [{"parent_name": "GetInfoCallback", "functions": [], "last": true, "name": "result", "properties": [], "link": {"text": "SocketInfo", "href": "#type-SocketInfo"}, "optional": false, "id": "property-GetInfoCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getInfo", "description": "Retrieves the state of the given socket."}, {"parent_name": null, "name": "read", "parameters": [{"parent_name": "read", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-read-socketId", "description": "The socketId."}, {"parent_name": "read", "functions": [], "name": "bufferSize", "simple_type": "integer", "properties": [], "optional": true, "id": "property-read-bufferSize", "description": "The read buffer size."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ReadCallback", "parameters": [{"parent_name": "ReadCallback", "functions": [], "last": true, "name": "readInfo", "properties": [], "link": {"text": "ReadInfo", "href": "#type-ReadInfo"}, "optional": false, "id": "property-ReadCallback-readInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ReadCallback", "parameters": [{"parent_name": "ReadCallback", "functions": [], "last": true, "name": "readInfo", "properties": [], "link": {"text": "ReadInfo", "href": "#type-ReadInfo"}, "optional": false, "id": "property-ReadCallback-readInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-read", "description": "Reads data from the given connected socket."}, {"parent_name": null, "name": "bind", "parameters": [{"parent_name": "bind", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-bind-socketId", "description": "The socketId."}, {"parent_name": "bind", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-bind-address", "description": "The address of the local machine."}, {"parent_name": "bind", "functions": [], "name": "port", "simple_type": "integer", "properties": [], "optional": false, "id": "property-bind-port", "description": "The port of the local machine."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "BindCallback", "parameters": [{"parent_name": "BindCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-BindCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "BindCallback", "parameters": [{"parent_name": "BindCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-BindCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-bind", "description": "Binds the local address for socket. Currently, it does not support TCP socket."}, {"parent_name": null, "name": "create", "parameters": [{"parent_name": "create", "functions": [], "name": "type", "properties": [], "link": {"text": "SocketType", "href": "#type-SocketType"}, "optional": false, "id": "property-create-type", "description": "The type of socket to create. Must be <code>tcp</code> or <code>udp</code>."}, {"parent_name": "create", "functions": [], "name": "options", "properties": [], "link": {"text": "CreateOptions", "href": "#type-CreateOptions"}, "optional": true, "id": "property-create-options", "description": "The socket options."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "CreateCallback", "parameters": [{"parent_name": "CreateCallback", "functions": [], "last": true, "name": "createInfo", "properties": [], "link": {"text": "CreateInfo", "href": "#type-CreateInfo"}, "optional": false, "id": "property-CreateCallback-createInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "CreateCallback", "parameters": [{"parent_name": "CreateCallback", "functions": [], "last": true, "name": "createInfo", "properties": [], "link": {"text": "CreateInfo", "href": "#type-CreateInfo"}, "optional": false, "id": "property-CreateCallback-createInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-create", "description": "Creates a socket of the specified type that will connect to the specified remote machine."}, {"parent_name": null, "name": "accept", "parameters": [{"parent_name": "accept", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-accept-socketId", "description": "The socketId."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "AcceptCallback", "parameters": [{"parent_name": "AcceptCallback", "functions": [], "last": true, "name": "acceptInfo", "properties": [], "link": {"text": "AcceptInfo", "href": "#type-AcceptInfo"}, "optional": false, "id": "property-AcceptCallback-acceptInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "AcceptCallback", "parameters": [{"parent_name": "AcceptCallback", "functions": [], "last": true, "name": "acceptInfo", "properties": [], "link": {"text": "AcceptInfo", "href": "#type-AcceptInfo"}, "optional": false, "id": "property-AcceptCallback-acceptInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-accept", "description": "This method is experimental and requires experimental API permission. This method applies to TCP sockets only. Registers a callback function to be called when a connection is accepted on this listening server socket. Listen must be called first. If there is already an active accept callback, this callback will be invoked immediately with an error as the resultCode."}, {"parent_name": null, "name": "write", "parameters": [{"parent_name": "write", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-write-socketId", "description": "The socketId."}, {"parent_name": "write", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-write-data", "description": "The data to write."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "WriteCallback", "parameters": [{"parent_name": "WriteCallback", "functions": [], "last": true, "name": "writeInfo", "properties": [], "link": {"text": "WriteInfo", "href": "#type-WriteInfo"}, "optional": false, "id": "property-WriteCallback-writeInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "WriteCallback", "parameters": [{"parent_name": "WriteCallback", "functions": [], "last": true, "name": "writeInfo", "properties": [], "link": {"text": "WriteInfo", "href": "#type-WriteInfo"}, "optional": false, "id": "property-WriteCallback-writeInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-write", "description": "Writes data on the given connected socket."}, {"parent_name": null, "name": "setNoDelay", "parameters": [{"parent_name": "setNoDelay", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-setNoDelay-socketId", "description": "The socketId."}, {"parent_name": "setNoDelay", "functions": [], "name": "noDelay", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-setNoDelay-noDelay", "description": "If true, disables Nagle's algorithm."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "SetNoDelayCallback", "parameters": [{"parent_name": "SetNoDelayCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SetNoDelayCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "SetNoDelayCallback", "parameters": [{"parent_name": "SetNoDelayCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SetNoDelayCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-setNoDelay", "description": "Sets or clears <code>TCP_NODELAY</code> for a TCP connection. Nagle's algorithm will be disabled when <code>TCP_NODELAY</code> is set."}, {"parent_name": null, "name": "getNetworkList", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "GetNetworkCallback", "parameters": [{"parent_name": "GetNetworkCallback", "functions": [], "last": true, "name": "result", "properties": [], "array": {"parent_name": "result", "functions": [], "name": "resultElement", "properties": [], "link": {"text": "NetworkInterface", "href": "#type-NetworkInterface"}, "optional": false, "id": "property-result-resultElement", "description": null}, "optional": false, "id": "property-GetNetworkCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "GetNetworkCallback", "parameters": [{"parent_name": "GetNetworkCallback", "functions": [], "last": true, "name": "result", "properties": [], "array": {"parent_name": "result", "functions": [], "name": "resultElement", "properties": [], "link": {"text": "NetworkInterface", "href": "#type-NetworkInterface"}, "optional": false, "id": "property-result-resultElement", "description": null}, "optional": false, "id": "property-GetNetworkCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-getNetworkList", "description": "Retrieves information about local adapters on this system."}, {"parent_name": null, "name": "connect", "parameters": [{"parent_name": "connect", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-connect-socketId", "description": "The socketId."}, {"parent_name": "connect", "functions": [], "name": "hostname", "simple_type": "string", "properties": [], "optional": false, "id": "property-connect-hostname", "description": "The hostname or IP address of the remote machine."}, {"parent_name": "connect", "functions": [], "name": "port", "simple_type": "integer", "properties": [], "optional": false, "id": "property-connect-port", "description": "The port of the remote machine."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ConnectCallback", "parameters": [{"parent_name": "ConnectCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ConnectCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ConnectCallback", "parameters": [{"parent_name": "ConnectCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ConnectCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-connect", "description": "Connects the socket to the remote machine (for a <code>tcp</code> socket). For a <code>udp</code> socket, this sets the default address which packets are sent to and read from for <code>read()</code> and <code>write()</code> calls."}, {"parent_name": null, "name": "sendTo", "parameters": [{"parent_name": "sendTo", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-sendTo-socketId", "description": "The socketId."}, {"parent_name": "sendTo", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-sendTo-data", "description": "The data to write."}, {"parent_name": "sendTo", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-sendTo-address", "description": "The address of the remote machine."}, {"parent_name": "sendTo", "functions": [], "name": "port", "simple_type": "integer", "properties": [], "optional": false, "id": "property-sendTo-port", "description": "The port of the remote machine."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "SendToCallback", "parameters": [{"parent_name": "SendToCallback", "functions": [], "last": true, "name": "writeInfo", "properties": [], "link": {"text": "WriteInfo", "href": "#type-WriteInfo"}, "optional": false, "id": "property-SendToCallback-writeInfo", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "SendToCallback", "parameters": [{"parent_name": "SendToCallback", "functions": [], "last": true, "name": "writeInfo", "properties": [], "link": {"text": "WriteInfo", "href": "#type-WriteInfo"}, "optional": false, "id": "property-SendToCallback-writeInfo", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-sendTo", "description": "Sends data on the given UDP socket to the given address and port."}, {"parent_name": null, "name": "destroy", "parameters": [{"parent_name": "destroy", "functions": [], "last": true, "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-destroy-socketId", "description": "The socketId."}], "callback": null, "returns": null, "id": "method-destroy", "description": "Destroys the socket. Each socket created should be destroyed after use."}, {"parent_name": null, "name": "setKeepAlive", "parameters": [{"parent_name": "setKeepAlive", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-setKeepAlive-socketId", "description": "The socketId."}, {"parent_name": "setKeepAlive", "functions": [], "name": "enable", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-setKeepAlive-enable", "description": "If true, enable keep-alive functionality."}, {"parent_name": "setKeepAlive", "functions": [], "name": "delay", "simple_type": "integer", "properties": [], "optional": true, "id": "property-setKeepAlive-delay", "description": "Set the delay seconds between the last data packet received and the first keepalive probe. Default is 0."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "SetKeepAliveCallback", "parameters": [{"parent_name": "SetKeepAliveCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SetKeepAliveCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "SetKeepAliveCallback", "parameters": [{"parent_name": "SetKeepAliveCallback", "functions": [], "last": true, "name": "result", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SetKeepAliveCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-setKeepAlive", "description": "Enables or disables the keep-alive functionality for a TCP connection."}, {"parent_name": null, "name": "listen", "parameters": [{"parent_name": "listen", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-listen-socketId", "description": "The socketId."}, {"parent_name": "listen", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-listen-address", "description": "The address of the local machine."}, {"parent_name": "listen", "functions": [], "name": "port", "simple_type": "integer", "properties": [], "optional": false, "id": "property-listen-port", "description": "The port of the local machine."}, {"parent_name": "listen", "functions": [], "name": "backlog", "simple_type": "integer", "properties": [], "optional": true, "id": "property-listen-backlog", "description": "Length of the socket's listen queue."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "ListenCallback", "parameters": [{"parent_name": "ListenCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ListenCallback-result", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "ListenCallback", "parameters": [{"parent_name": "ListenCallback", "functions": [], "last": true, "name": "result", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ListenCallback-result", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-listen", "description": "This method is experimental and requires experimental API permission. This method applies to TCP sockets only. Listens for connections on the specified port and address. This effectively makes this a server socket, and client socket functions (connect, read, write) can no longer be used on this socket."}], "events": [], "types": [{"properties": [{"parent_name": "SocketInfo", "functions": [], "name": "socketType", "properties": [], "link": {"text": "SocketType", "href": "#type-SocketType"}, "optional": false, "id": "property-SocketInfo-socketType", "description": "The type of the passed socket. This will be <code>tcp</code> or <code>udp</code>."}, {"parent_name": "SocketInfo", "functions": [], "name": "localPort", "simple_type": "integer", "properties": [], "optional": true, "id": "property-SocketInfo-localPort", "description": "If the underlying socket is bound or connected, contains its local port."}, {"parent_name": "SocketInfo", "functions": [], "name": "peerAddress", "simple_type": "string", "properties": [], "optional": true, "id": "property-SocketInfo-peerAddress", "description": "If the underlying socket is connected, contains the IPv4/6 address of the peer."}, {"parent_name": "SocketInfo", "functions": [], "name": "peerPort", "simple_type": "integer", "properties": [], "optional": true, "id": "property-SocketInfo-peerPort", "description": "If the underlying socket is connected, contains the port of the connected peer."}, {"parent_name": "SocketInfo", "functions": [], "name": "localAddress", "simple_type": "string", "properties": [], "optional": true, "id": "property-SocketInfo-localAddress", "description": "If the underlying socket is bound or connected, contains its local IPv4/6 address."}, {"parent_name": "SocketInfo", "functions": [], "name": "connected", "simple_type": "boolean", "properties": [], "optional": false, "id": "property-SocketInfo-connected", "description": "Whether or not the underlying socket is connected.<br/><br/> For <code>tcp</code> sockets, this will remain true even if the remote peer has disconnected. Reading or writing to the socket may then result in an error, hinting that this socket should be disconnected via <code>disconnect()</code>.<br/><br/> For <code>udp</code> sockets, this just represents whether a default remote address has been specified for reading and writing packets."}], "name": "SocketInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-SocketInfo", "description": null}, {"properties": [{"parent_name": "NetworkInterface", "functions": [], "name": "name", "simple_type": "string", "properties": [], "optional": false, "id": "property-NetworkInterface-name", "description": "The underlying name of the adapter. On *nix, this will typically be \"eth0\", \"lo\", etc."}, {"parent_name": "NetworkInterface", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-NetworkInterface-address", "description": "The available IPv4/6 address."}], "name": "NetworkInterface", "simple_type": "object", "functions": [], "events": [], "id": "type-NetworkInterface", "description": null}, {"properties": [{"parent_name": "ReadInfo", "functions": [], "name": "resultCode", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ReadInfo-resultCode", "description": "The resultCode returned from the underlying read() call."}, {"parent_name": "ReadInfo", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-ReadInfo-data", "description": null}], "name": "ReadInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-ReadInfo", "description": null}, {"properties": [{"parent_name": "AcceptInfo", "functions": [], "name": "resultCode", "simple_type": "integer", "properties": [], "optional": false, "id": "property-AcceptInfo-resultCode", "description": null}, {"parent_name": "AcceptInfo", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": true, "id": "property-AcceptInfo-socketId", "description": "The id of the accepted socket."}], "name": "AcceptInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-AcceptInfo", "description": null}, {"properties": [], "name": "CreateOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-CreateOptions", "description": null}, {"properties": [], "name": "SocketType", "functions": [], "events": [], "enum_values": [{"name": "tcp"}, {"last": true, "name": "udp"}], "id": "type-SocketType", "description": ""}, {"properties": [{"parent_name": "WriteInfo", "functions": [], "name": "bytesWritten", "simple_type": "integer", "properties": [], "optional": false, "id": "property-WriteInfo-bytesWritten", "description": "The number of bytes sent, or a negative error code."}], "name": "WriteInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-WriteInfo", "description": null}, {"properties": [{"parent_name": "RecvFromInfo", "functions": [], "name": "resultCode", "simple_type": "integer", "properties": [], "optional": false, "id": "property-RecvFromInfo-resultCode", "description": "The resultCode returned from the underlying recvfrom() call."}, {"parent_name": "RecvFromInfo", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": false, "id": "property-RecvFromInfo-data", "description": null}, {"parent_name": "RecvFromInfo", "functions": [], "name": "port", "simple_type": "integer", "properties": [], "optional": false, "id": "property-RecvFromInfo-port", "description": null}, {"parent_name": "RecvFromInfo", "functions": [], "name": "address", "simple_type": "string", "properties": [], "optional": false, "id": "property-RecvFromInfo-address", "description": "The address of the remote machine."}], "name": "RecvFromInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-RecvFromInfo", "description": null}, {"properties": [{"parent_name": "CreateInfo", "functions": [], "name": "socketId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-CreateInfo-socketId", "description": "The id of the newly created socket."}], "name": "CreateInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-CreateInfo", "description": null}], "properties": []}, "chrome.idle": {"functions": [{"parent_name": null, "name": "queryState", "parameters": [{"parent_name": "queryState", "functions": [], "name": "thresholdSeconds", "simple_type": "integer", "properties": [], "optional": false, "id": "property-queryState-thresholdSeconds", "description": "Threshold, in seconds, used to determine when a machine is in the idle state."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "newState", "properties": [], "enum_values": [{"name": "active"}, {"name": "idle"}, {"last": true, "name": "locked"}], "optional": false, "id": "property-callback-newState", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "newState", "properties": [], "enum_values": [{"name": "active"}, {"name": "idle"}, {"last": true, "name": "locked"}], "optional": false, "id": "property-callback-newState", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-queryState", "description": "Returns the current state of the browser."}], "events": [{"callback": null, "name": "onStateChanged", "parameters": [{"parent_name": "onStateChanged", "functions": [], "last": true, "name": "newState", "properties": [], "enum_values": [{"last": true, "name": "active"}], "optional": false, "id": "property-onStateChanged-newState", "description": null}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onStateChanged", "actions": [], "description": "Fired when the browser changes to an active state.  Currently only reports the transition from idle to active."}], "types": [], "properties": []}, "chrome.storage": {"functions": [], "events": [{"callback": null, "name": "onChanged", "parameters": [{"parent_name": "onChanged", "functions": [], "name": "changes", "simple_type": "object", "properties": [], "optional": false, "id": "property-onChanged-changes", "description": "Object mapping each key that changed to its corresponding <a href='#type-StorageChange'>StorageChange</a> for that item."}, {"parent_name": "onChanged", "functions": [], "last": true, "name": "areaName", "simple_type": "string", "properties": [], "optional": false, "id": "property-onChanged-areaName", "description": "The name of the storage area (<code>sync</code> or <code>local</code>) the changes are for."}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onChanged", "actions": [], "description": "Fired when one or more items change."}], "types": [{"properties": [], "name": "StorageArea", "simple_type": "object", "functions": [{"parent_name": "StorageArea", "name": "getBytesInUse", "parameters": [{"parent_name": "getBytesInUse", "functions": [], "name": "keys", "properties": [], "choices": [{"parent_name": "keys", "functions": [], "name": "keys", "simple_type": "string", "properties": [], "optional": true, "id": "property-keys-keys", "description": null}, {"parent_name": "keys", "functions": [], "last": true, "name": "keys", "properties": [], "array": {"parent_name": "keys", "functions": [], "name": "keysElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-keys-keysElement", "description": null}, "optional": true, "id": "property-keys-keys", "description": null}], "optional": true, "id": "property-getBytesInUse-keys", "description": "A single key or list of keys to get the total usage for. An empty list will return 0. Pass in <code>null</code> to get the total usage of all of storage."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "bytesInUse", "simple_type": "integer", "properties": [], "optional": false, "id": "property-callback-bytesInUse", "description": "Amount of space being used in storage, in bytes."}], "optional": false, "description": "Callback with the amount of space being used by storage, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "bytesInUse", "simple_type": "integer", "properties": [], "optional": false, "id": "property-callback-bytesInUse", "description": "Amount of space being used in storage, in bytes."}], "optional": false, "description": "Callback with the amount of space being used by storage, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}, "returns": null, "id": "method-StorageArea-getBytesInUse", "description": "Gets the amount of space (in bytes) being used by one or more items."}, {"parent_name": "StorageArea", "name": "clear", "parameters": [{"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Callback on success, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Callback on success, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}, "returns": null, "id": "method-StorageArea-clear", "description": "Removes all items from storage."}, {"parent_name": "StorageArea", "name": "set", "parameters": [{"parent_name": "set", "functions": [], "name": "items", "simple_type": "object", "properties": [], "optional": false, "id": "property-set-items", "description": "Object specifying items to augment storage with. Values that cannot be serialized (functions, etc) will be ignored."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Callback on success, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Callback on success, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}, "returns": null, "id": "method-StorageArea-set", "description": "Sets multiple items."}, {"parent_name": "StorageArea", "name": "remove", "parameters": [{"parent_name": "remove", "functions": [], "name": "keys", "properties": [], "choices": [{"parent_name": "keys", "functions": [], "name": "keys", "simple_type": "string", "properties": [], "optional": true, "id": "property-keys-keys", "description": null}, {"parent_name": "keys", "functions": [], "last": true, "name": "keys", "properties": [], "array": {"parent_name": "keys", "functions": [], "name": "keysElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-keys-keysElement", "description": null}, "optional": true, "id": "property-keys-keys", "description": null}], "optional": false, "id": "property-remove-keys", "description": "A single key or a list of keys for items to remove."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Callback on success, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [], "optional": true, "description": "Callback on success, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}, "returns": null, "id": "method-StorageArea-remove", "description": "Removes one or more items from storage."}, {"parent_name": "StorageArea", "name": "get", "parameters": [{"parent_name": "get", "functions": [], "name": "keys", "properties": [], "choices": [{"parent_name": "keys", "functions": [], "name": "keys", "simple_type": "string", "properties": [], "optional": true, "id": "property-keys-keys", "description": null}, {"parent_name": "keys", "functions": [], "name": "keys", "simple_type": "object", "properties": [], "optional": true, "id": "property-keys-keys", "description": "Storage items to return in the callback, where the values are replaced with those from storage if they exist."}, {"parent_name": "keys", "functions": [], "last": true, "name": "keys", "properties": [], "array": {"parent_name": "keys", "functions": [], "name": "keysElement", "simple_type": "string", "properties": [], "optional": false, "id": "property-keys-keysElement", "description": null}, "optional": true, "id": "property-keys-keys", "description": null}], "optional": true, "id": "property-get-keys", "description": "A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).  An empty list or object will return an empty result object.  Pass in <code>null</code> to get the entire contents of storage."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "items", "simple_type": "object", "properties": [], "optional": false, "id": "property-callback-items", "description": "Object with items in their key-value mappings."}], "optional": false, "description": "Callback with storage items, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "callback", "parameters": [{"parent_name": "callback", "functions": [], "last": true, "name": "items", "simple_type": "object", "properties": [], "optional": false, "id": "property-callback-items", "description": "Object with items in their key-value mappings."}], "optional": false, "description": "Callback with storage items, or on failure (in which case <a href=\"runtime.html#type-lastError\">runtime.lastError</a> will be set)."}, "returns": null, "id": "method-StorageArea-get", "description": "Gets one or more items from storage."}], "events": [], "id": "type-StorageArea", "description": null}, {"properties": [{"parent_name": "StorageChange", "functions": [], "name": "newValue", "simple_type": "any", "properties": [], "optional": true, "id": "property-StorageChange-newValue", "description": "The new value of the item, if there is a new value."}, {"parent_name": "StorageChange", "functions": [], "name": "oldValue", "simple_type": "any", "properties": [], "optional": true, "id": "property-StorageChange-oldValue", "description": "The old value of the item, if there was an old value."}], "name": "StorageChange", "simple_type": "object", "functions": [], "events": [], "id": "type-StorageChange", "description": null}], "properties": [{"parent_name": null, "functions": [], "name": "local", "properties": [{"parent_name": "local", "functions": [], "name": "QUOTA_BYTES", "value": "5,242,880", "properties": [], "optional": false, "id": "property-local-QUOTA_BYTES", "description": "The maximum amount (in bytes) of data that can be stored in local storage, as measured by the JSON stringification of every value plus every key's length. This value will be ignored if the extension has the <code>unlimitedStorage</code> permission. Updates that would cause this limit to be exceeded fail immediately and set <a href=\"runtime.html#type-lastError\">runtime.lastError</a>."}], "link": {"text": "StorageArea", "href": "#type-StorageArea"}, "optional": false, "id": "property-local", "description": "Items in the <code>local</code> storage area are local to each machine."}, {"parent_name": null, "functions": [], "name": "sync", "properties": [{"parent_name": "sync", "functions": [], "name": "MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE", "value": "10", "properties": [], "optional": false, "id": "property-sync-MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE", "description": "The maximum number of <code>set</code>, <code>remove</code>, or <code>clear</code> operations that can be performed each minute, sustained over 10 minutes. Updates that would cause this limit to be exceeded fail immediately and set <a href=\"runtime.html#type-lastError\">runtime.lastError</a>."}, {"parent_name": "sync", "functions": [], "name": "QUOTA_BYTES", "value": "102,400", "properties": [], "optional": false, "id": "property-sync-QUOTA_BYTES", "description": "The maximum total amount (in bytes) of data that can be stored in sync storage, as measured by the JSON stringification of every value plus every key's length. Updates that would cause this limit to be exceeded fail immediately and set <a href=\"runtime.html#type-lastError\">runtime.lastError</a>."}, {"parent_name": "sync", "functions": [], "name": "QUOTA_BYTES_PER_ITEM", "value": "4,096", "properties": [], "optional": false, "id": "property-sync-QUOTA_BYTES_PER_ITEM", "description": "The maximum size (in bytes) of each individual item in sync storage, as measured by the JSON stringification of its value plus its key length. Updates containing items larger than this limit will fail immediately and set <a href=\"runtime.html#type-lastError\">runtime.lastError</a>."}, {"parent_name": "sync", "functions": [], "name": "MAX_ITEMS", "value": "512", "properties": [], "optional": false, "id": "property-sync-MAX_ITEMS", "description": "The maximum number of items that can be stored in sync storage. Updates that would cause this limit to be exceeded will fail immediately and set <a href=\"runtime.html#type-lastError\">runtime.lastError</a>."}, {"parent_name": "sync", "functions": [], "name": "MAX_WRITE_OPERATIONS_PER_HOUR", "value": "1,000", "properties": [], "optional": false, "id": "property-sync-MAX_WRITE_OPERATIONS_PER_HOUR", "description": "The maximum number of <code>set</code>, <code>remove</code>, or <code>clear</code> operations that can be performed each hour. Updates that would cause this limit to be exceeded fail immediately and set <a href=\"runtime.html#type-lastError\">runtime.lastError</a>."}], "link": {"text": "StorageArea", "href": "#type-StorageArea"}, "optional": false, "id": "property-sync", "description": "Items in the <code>sync</code> storage area are synced using Chrome Sync."}]}, "chrome.experimental.usb": {"functions": [{"parent_name": null, "name": "isochronousTransfer", "parameters": [{"parent_name": "isochronousTransfer", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-isochronousTransfer-device", "description": "An open device to make the transfer on."}, {"parent_name": "isochronousTransfer", "functions": [], "name": "transferInfo", "properties": [], "link": {"text": "IsochronousTransferInfo", "href": "#type-IsochronousTransferInfo"}, "optional": false, "id": "property-isochronousTransfer-transferInfo", "description": "The parameters to the transfer. See IsochronousTransferInfo."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-isochronousTransfer", "description": "Performs an isochronous transfer on the specific device."}, {"parent_name": null, "name": "closeDevice", "parameters": [{"parent_name": "closeDevice", "functions": [], "last": true, "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-closeDevice-device", "description": "The device to close."}], "callback": null, "returns": null, "id": "method-closeDevice", "description": "Closes an open device instance. Invoking operations on a device after it has been closed is a safe operation, but causes no action to be taken."}, {"parent_name": null, "name": "findDevice", "parameters": [{"parent_name": "findDevice", "functions": [], "name": "vendorId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-findDevice-vendorId", "description": "The vendor ID of the USB device to find."}, {"parent_name": "findDevice", "functions": [], "name": "productId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-findDevice-productId", "description": "The product ID of the USB device to find."}, {"parent_name": "findDevice", "functions": [], "name": "options", "properties": [], "link": {"text": "DeviceOptions", "href": "#type-DeviceOptions"}, "optional": false, "id": "property-findDevice-options", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "FindDeviceCallback", "parameters": [{"parent_name": "FindDeviceCallback", "functions": [], "last": true, "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": true, "id": "property-FindDeviceCallback-device", "description": null}], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "FindDeviceCallback", "parameters": [{"parent_name": "FindDeviceCallback", "functions": [], "last": true, "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": true, "id": "property-FindDeviceCallback-device", "description": null}], "optional": false, "description": null}, "returns": null, "id": "method-findDevice", "description": "Finds the first instance of the USB device specified by the vendorId/ productId pair and, if permissions allow, opens it for use. Upon successfully opening a device the callback is invoked with a populated Device object. On failure, the callback is invoked with null."}, {"parent_name": null, "name": "setInterfaceAlternateSetting", "parameters": [{"parent_name": "setInterfaceAlternateSetting", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-setInterfaceAlternateSetting-device", "description": "The device on which the interface settings are to be set."}, {"parent_name": "setInterfaceAlternateSetting", "functions": [], "name": "interfaceNumber", "simple_type": "integer", "properties": [], "optional": false, "id": "property-setInterfaceAlternateSetting-interfaceNumber", "description": null}, {"parent_name": "setInterfaceAlternateSetting", "functions": [], "name": "alternateSetting", "simple_type": "integer", "properties": [], "optional": false, "id": "property-setInterfaceAlternateSetting-alternateSetting", "description": "The alternate setting to set."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "VoidCallback", "parameters": [], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "VoidCallback", "parameters": [], "optional": false, "description": null}, "returns": null, "id": "method-setInterfaceAlternateSetting", "description": "Selects an alternate setting on a previously claimed interface on a device."}, {"parent_name": null, "name": "interruptTransfer", "parameters": [{"parent_name": "interruptTransfer", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-interruptTransfer-device", "description": "An open device to make the transfer on."}, {"parent_name": "interruptTransfer", "functions": [], "name": "transferInfo", "properties": [], "link": {"text": "GenericTransferInfo", "href": "#type-GenericTransferInfo"}, "optional": false, "id": "property-interruptTransfer-transferInfo", "description": "The paramters to the transfer. See GenericTransferInfo."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-interruptTransfer", "description": "Performs an interrupt transfer on the specified device."}, {"parent_name": null, "name": "releaseInterface", "parameters": [{"parent_name": "releaseInterface", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-releaseInterface-device", "description": "The device on which the interface is to be released."}, {"parent_name": "releaseInterface", "functions": [], "name": "interfaceNumber", "simple_type": "integer", "properties": [], "optional": false, "id": "property-releaseInterface-interfaceNumber", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "VoidCallback", "parameters": [], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "VoidCallback", "parameters": [], "optional": false, "description": null}, "returns": null, "id": "method-releaseInterface", "description": "Releases a claim to an interface on the provided device."}, {"parent_name": null, "name": "bulkTransfer", "parameters": [{"parent_name": "bulkTransfer", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-bulkTransfer-device", "description": "An open device to make the transfer on."}, {"parent_name": "bulkTransfer", "functions": [], "name": "transferInfo", "properties": [], "link": {"text": "GenericTransferInfo", "href": "#type-GenericTransferInfo"}, "optional": false, "id": "property-bulkTransfer-transferInfo", "description": "The paramters to the transfer. See GenericTransferInfo."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-bulkTransfer", "description": "Performs a bulk transfer on the specified device."}, {"parent_name": null, "name": "claimInterface", "parameters": [{"parent_name": "claimInterface", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-claimInterface-device", "description": "The device on which the interface is to be claimed."}, {"parent_name": "claimInterface", "functions": [], "name": "interfaceNumber", "simple_type": "integer", "properties": [], "optional": false, "id": "property-claimInterface-interfaceNumber", "description": null}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "VoidCallback", "parameters": [], "optional": false, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "VoidCallback", "parameters": [], "optional": false, "description": null}, "returns": null, "id": "method-claimInterface", "description": "Claims an interface on the specified USB device."}, {"parent_name": null, "name": "controlTransfer", "parameters": [{"parent_name": "controlTransfer", "functions": [], "name": "device", "properties": [], "link": {"text": "Device", "href": "#type-Device"}, "optional": false, "id": "property-controlTransfer-device", "description": "An open device to make the transfer on."}, {"parent_name": "controlTransfer", "functions": [], "name": "transferInfo", "properties": [], "link": {"text": "ControlTransferInfo", "href": "#type-ControlTransferInfo"}, "optional": false, "id": "property-controlTransfer-transferInfo", "description": "The parameters to the transfer. See ControlTransferInfo."}, {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}], "callback": {"simple_type": {"simple_type": "function"}, "last": true, "name": "TransferCallback", "parameters": [], "optional": true, "description": null}, "returns": null, "id": "method-controlTransfer", "description": "Performs a control transfer on the specified device. See the ControlTransferInfo structure for the parameters required to make a transfer."}], "events": [{"callback": null, "name": "onEvent", "parameters": [{"parent_name": "onEvent", "functions": [], "last": true, "name": "event", "properties": [], "link": {"text": "UsbEvent", "href": "#type-UsbEvent"}, "optional": false, "id": "property-onEvent-event", "description": null}], "parent_name": null, "supportsRules": false, "filters": [], "conditions": [], "id": "event-onEvent", "actions": [], "description": null}], "types": [{"properties": [{"parent_name": "Device", "functions": [], "name": "vendorId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-Device-vendorId", "description": null}, {"parent_name": "Device", "functions": [], "name": "handle", "simple_type": "integer", "properties": [], "optional": false, "id": "property-Device-handle", "description": null}, {"parent_name": "Device", "functions": [], "name": "productId", "simple_type": "integer", "properties": [], "optional": false, "id": "property-Device-productId", "description": null}], "name": "Device", "simple_type": "object", "functions": [], "events": [], "id": "type-Device", "description": null}, {"properties": [{"parent_name": "DeviceOptions", "functions": [], "name": "onEvent", "simple_type": "function", "properties": [], "optional": true, "id": "property-DeviceOptions-onEvent", "description": "Invoked by the extension API whenever an event occurs for the device(s) that this DeviceOptions is associated with."}], "name": "DeviceOptions", "simple_type": "object", "functions": [], "events": [], "id": "type-DeviceOptions", "description": null}, {"properties": [{"parent_name": "IsochronousTransferInfo", "functions": [], "name": "packetLength", "simple_type": "integer", "properties": [], "optional": false, "id": "property-IsochronousTransferInfo-packetLength", "description": "The length of each of the packets in this transfer."}, {"parent_name": "IsochronousTransferInfo", "functions": [], "name": "transferInfo", "properties": [], "link": {"text": "GenericTransferInfo", "href": "#type-GenericTransferInfo"}, "optional": false, "id": "property-IsochronousTransferInfo-transferInfo", "description": "All of the normal transfer parameters are encapsulated in the transferInfo parameters. Note that the data specified in this parameter block is split along packetLength boundaries to form the individual packets of the transfer."}, {"parent_name": "IsochronousTransferInfo", "functions": [], "name": "packets", "simple_type": "integer", "properties": [], "optional": false, "id": "property-IsochronousTransferInfo-packets", "description": "The total number of packets in this transfer."}], "name": "IsochronousTransferInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-IsochronousTransferInfo", "description": null}, {"properties": [{"parent_name": "UsbEvent", "functions": [], "name": "type", "simple_type": "string", "properties": [], "optional": false, "id": "property-UsbEvent-type", "description": "A string indicating the type of the event. Currently will only contain the value 'transferResult'."}, {"parent_name": "UsbEvent", "functions": [], "name": "resultCode", "simple_type": "integer", "properties": [], "optional": true, "id": "property-UsbEvent-resultCode", "description": "A value of 0 indicates that the transfer was a success. Other values indicate failure."}, {"parent_name": "UsbEvent", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": true, "id": "property-UsbEvent-data", "description": "If the transfer was an input transfer then this field will contain all of the input data requested."}, {"parent_name": "UsbEvent", "functions": [], "name": "error", "simple_type": "string", "properties": [], "optional": true, "id": "property-UsbEvent-error", "description": "If resultCode is not 0, this field will contain a textual description of the error that occurred during the transfer."}], "name": "UsbEvent", "simple_type": "object", "functions": [], "events": [], "id": "type-UsbEvent", "description": null}, {"properties": [{"parent_name": "GenericTransferInfo", "functions": [], "name": "direction", "simple_type": "string", "properties": [], "optional": false, "id": "property-GenericTransferInfo-direction", "description": "The direction of this transfer. Must be one of in or out."}, {"parent_name": "GenericTransferInfo", "functions": [], "name": "endpoint", "simple_type": "integer", "properties": [], "optional": false, "id": "property-GenericTransferInfo-endpoint", "description": null}, {"parent_name": "GenericTransferInfo", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": true, "id": "property-GenericTransferInfo-data", "description": "If this is an output transfer then this field must be populated. Otherwise, it will be ignored."}, {"parent_name": "GenericTransferInfo", "functions": [], "name": "length", "simple_type": "integer", "properties": [], "optional": true, "id": "property-GenericTransferInfo-length", "description": "If this is an input transfer then this field indicates the size of the input buffer. If this is an output transfer then this field is ignored."}], "name": "GenericTransferInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-GenericTransferInfo", "description": null}, {"properties": [{"parent_name": "ControlTransferInfo", "functions": [], "name": "index", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ControlTransferInfo-index", "description": null}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "direction", "simple_type": "string", "properties": [], "optional": false, "id": "property-ControlTransferInfo-direction", "description": "The direction of this transfer. Must be one of either in or out."}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "requestType", "simple_type": "string", "properties": [], "optional": false, "id": "property-ControlTransferInfo-requestType", "description": "The type of this request. Must be one of standard, class, vendor, or reserved."}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "data", "simple_type": "arraybuffer", "properties": [], "optional": true, "id": "property-ControlTransferInfo-data", "description": "The data payload carried by this transfer. If this is an output tranfer then this field must be set."}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "request", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ControlTransferInfo-request", "description": null}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "value", "simple_type": "integer", "properties": [], "optional": false, "id": "property-ControlTransferInfo-value", "description": null}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "length", "simple_type": "integer", "properties": [], "optional": true, "id": "property-ControlTransferInfo-length", "description": "If this transfer is an input transfer, then this field must be set to indicate the expected data length. If this is an output transfer, then this field is ignored."}, {"parent_name": "ControlTransferInfo", "functions": [], "name": "recipient", "simple_type": "string", "properties": [], "optional": false, "id": "property-ControlTransferInfo-recipient", "description": "The intended recipient for this transfer. Must be one of device, interface, endpoint, or other."}], "name": "ControlTransferInfo", "simple_type": "object", "functions": [], "events": [], "id": "type-ControlTransferInfo", "description": null}], "properties": []}}